{"version":3,"sources":["logo.svg","components/favartists.js","components/favsongs.js","firebase/firebase.js","firebase/api-Key.js","DateToTime.js","components/Reply.js","components/AddReply.js","components/Post.js","components/ReturnHomepagePost.js","components/HomePagePosts.js","components/pageheader.js","components/homepage.js","components/login.js","components/Sidebar.js","components/MapLeaflet.js","dating_components/SignUpComponents./ChooseQuestion.js","dating_components/SignUpComponents./ImageUpload.js","dating_components/signup.js","components/artisthomepage.js","components/trackhomepage.js","components/settingspage.js","dating_components/PreviewComponents/NoneInCommon.js","dating_components/PreviewComponents/OverLapArtists.js","dating_components/PreviewComponents/OverLapSongs.js","dating_components/PreviewComponents/ReturnPreview.js","dating_components/DatingHomepage.js","dating_components/DatingLogin.js","dating_components/pageheaderdating.js","dating_components/EdgeCaseModals/NoMatchModal.js","dating_components/EdgeCaseModals/NoMessageModal.js","dating_components/ChatsComponents/ReturnMessage.js","dating_components/ChatsComponents/ReturnChats.js","dating_components/ChatsComponents/ReturnStartChat.js","dating_components/ChatsComponents/WriteMessage.js","dating_components/ChatsHomepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","s","require","Spotify","FavoriteArtists","_React$useContext","React","useContext","InfoContext","accesstoken","user","_useState","useState","_useState2","Object","slicedToArray","artistnames","setNames","_useState3","_useState4","artistimages","setImages","_useState5","_useState6","orderedArtists","setOrdererdArtists","array","toConsumableArray","Array","keys","_useState7","_useState8","indexarray","setAccessToken","useEffect","_loop","i","getArtist","then","res","temp","push","name","temp2","images","url","temp3","length","catch","err","console","log","ReturnFavArtist","_ref","id","artistname","imageurl","react_default","a","createElement","key","toString","react_router_dom","to","concat","Image","rounded","src","verticalAlign","Header","size","returnSecondFavArtist","className","Grid","Row","slice","map","fluid","returnThirdFavArtist","FavoriteSongs","songs","refreshtoken","_useContext","songnames","songimages","orderedSongs","setOrderedSongs","getTrack","album","ReturnFavSong","_ref2","songName","Column","mobile","tablet","computer","returnSecondFavSong","returnThirdFavSong","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","storage","messages","messaging","dbArtists","database","ref","child","dbUsers","dbSongs","dbPosts","dbMessages","dbReplies","dbLikes","dbChats","DatetoTime","input","HH","AP","date","Date","getMonth","getDate","getHours","getMinutes","ReturnReply","memo","reply","replies","setReplies","artists","setArtists","setMessages","setSongs","posts","setPosts","likes","setLikes","setUser","setAccesToken","setRefreshtoken","replier","setreplier","replierid","axios","get","response","data","error","Segment","attached","secondary","compact","columns","width","style","marginLeft","textAlign","circular","image","marginTop","as","Loader","active","inline","AddReply","item","value","setValue","refKey","useRef","eventhandler","e","document","getElementById","likeskey","getKey","content","posterid","createdAt",".sv","postsfollowing","includes","post","process","handleSubmitReply","TextArea","onKeyUp","onChange","target","rows","placeholder","poster","setPoster","showReply","setShowReply","time","DateToTime","centered","Label","basic","color","pointing","marginBottom","values","Reply","Form","components_AddReply","Button","onClick","index","set","remove","updateLike","Icon","positive","ReturnPost","includeHeader","setRefreshToken","type","setType","artistName","setArtistName","_useState9","_useState10","trackName","setTrackName","number","Math","floor","random","avatar","alignContent","HomePagePosts","returnPosts","setReturnPosts","orderedTime","setOrderedTime","arrayColors","favoriteartists","favoritesongs","sort","b","localStorage","setItem","JSON","stringify","parse","getItem","Container","dividing","raised","ReturnHomepagePost","PageHeader","access_token","setVisible","visible","results","setResults","isLoading","setisLoading","result","setResult","redirectArtist","setRedirectArtist","_useState11","_useState12","redirectTrack","setRedirectTrack","_useState13","_useState14","redirectLogout","setRedirectLogout","_useState15","_useState16","redirectSettings","setRedirectSettings","_useState17","_useState18","_useState19","_useState20","home","setRedirectHome","_handleSearchChange","asyncToGenerator","regenerator_default","mark","_callee","valuee","max","realistic","urltrack","ressong","_i","_item","wrap","_context","prev","next","encodeURIComponent","headers","Accept","Content-Type","Authorization","sent","items","title","description","genres","price","popularity","tracks","stop","apply","this","arguments","backgroundColor","Link","inverted","cursor","Search","loading","onResultSelect","onSearchChange","_","debounce","_ref3","_x","handleSearchChange","leading","Group","icon","react_router","HomePageFeed","_useParams","useParams","refresh_token","setTime","setTimeout","redirectUri","padded","stretched","favsongs","components_HomePagePosts","favartists","green","makeStyles","theme","root","height","backgroundImage","backgroundRepeat","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","main","form","submit","SideBar","Sidebar","Menu","animation","onHide","vertical","Item","customMarker","L","iconUrl","iconSize","iconAnchor","MapLeaflet","position","Map","center","zoom","TileLayer","detectRetina","attribution","Marker","Popup","useStyles","button","formControl","minWidth","ChooseQuestion","availableQuestions","chosen","setter","classes","_React$useState","_React$useState2","_React$useState3","_React$useState4","open","setOpen","FormControl","InputLabel","Select","labelId","onClose","onOpen","event","MenuItem","& > *","ImageUpload","accept","multiple","files","htmlFor","Button_Button","variant","component","querystring","Signup","setError","gender","redirect","setRedirect","image1","setImage1","image2","image3","fileImage1","setFileImage","_useState21","_useState22","_useState23","_useState24","phone","_useState25","_useState26","location","setLocation","_useState27","_useState28","redirectableLogin","setRedirectableLogin","_useState29","_useState30","fname","setFName","_useState31","_useState32","lname","setLName","_useState33","_useState34","bio","setBio","allquestions","_useState35","_useState36","questions","_useState37","_useState38","ans1","setAns1","_useState39","_useState40","ans2","setAns2","_useState41","_useState42","ans3","setAns3","_useState43","_useState44","ques1","setQues1","_useState45","_useState46","ques2","setQues2","_useState47","_useState48","ques3","setQues3","contextRef","createRef","CheckPass","backendroute","put","on","snapshot","round","bytesTransferred","totalBytes","getDownloadURL","indexOf","q1ind","q2ind","q3ind","q1","q2","q3","backendroute_image","datingimages","window","assign","Container_Container","maxWidth","CssBaseline","Avatar","LockOutlined_default","Typography","noValidate","Grid_Grid","container","xs","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","SignUpComponentsChooseQuestion","newVal","SignUpComponentsImageUpload","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","Box","mt","align","href","getFullYear","ArtistHomepage","artistid","setName","setImage","setImage2","setImage3","constant","dataToPush","defineProperty","update","class","onSubmit","replieskey","handleSubmit","TrackPage","trackid","setValuee","artist","SettingsPage","email","NoneInCommon","person","names","ReturnPreview","OverLapArtists","Divider","hidden","PreviewComponents_NoneInCommon","OverLapSongs","increaseIndex","users","Or","k","person1","person2","colums","DatingHomePageFeed","orderedAttracted","setIndex","seen","matched","interested","requestPermission","getToken","token","onMessage","payload","marginRight","PreviewComponents_OverLapSongs","PreviewComponents_ReturnPreview","PreviewComponents_OverLapArtists","SignInSide","md","Paper","elevation","square","justifyContent","dark","Lock_default","PageHeaderDating","activeItem","setActiveItem","setNoMatchModal","setNoMessagesModal","switchActive","widths","NoMatchModal","nomatchmodal","Modal","Content","Actions","NoMessagesModal","nomessagemodal","ReturnMessage","otherpersonid","chatid","lastMine","lastTheirs","messageid","chats","allusers","floated","senderid","border-radius","max-width","word-wrap","ReturnChats","rel_messages","setLastMine","setLastTheirs","padding","ChatsComponents_ReturnMessage","ReturnStartChat","relevant","setRelevant","find","doc","WriteMessage","messageKey","handleSubmitMessage","ChatsHomepage","relevantChats","setRelevantChats","setOtherId","element","scrollTo","offsetHeight","$","scrollTop","scrollHeight","otherid","obj","fontSize","minHeight","maxHeight","overflow-y","ChatsComponents_ReturnChats","ChatsComponents_ReturnStartChat","ChatsComponents_WriteMessage","createContext","App","withMenu","page","pageheader","Pushable","components_Sidebar","Pusher","withMenuDating","pageheaderdating","EdgeCaseModals_NoMatchModal","NoMessageModal","setChats","setAllusers","attractedUsers","setOrderedAttracted","setUsers","handleData","snap","val","alert","off","matchMusic","arr1","arr2","arr3","arr4","intersection1","filter","x","intersection2","copyUsers","partner","toset","score1","score2","min","Provider","exact","path","render","signup","settingspage","homepage","artisthomepage","trackhomepage","components_MapLeaflet","DatingHomepage","DatingLogin_SignInSide","dating_components_ChatsHomepage","Boolean","hostname","match","ReactDOM","src_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da076d13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nimport React, { useState, useEffect, isValidElement } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { Grid, Image, Header, Search, Button, Container } from 'semantic-ui-react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { InfoContext } from '../App';\nimport axios from 'axios'\nconst mongoose = require('mongoose');\nconst s = new Spotify();\nconst FavoriteArtists = () => {\n        const { accesstoken, user } = React.useContext(InfoContext);\n        const [artistnames, setNames] = useState([]);\n        const [artistimages, setImages] = useState([]);\n        const [orderedArtists, setOrdererdArtists] = useState([]);\n\n        var array = [...Array(20).keys()];\n        const [indexarray, setIndex] = useState(array);\n\n        s.setAccessToken(accesstoken);\n        useEffect(initializeState, [user]);\n        var temp = [];\n        var temp2 = [];\n        var temp3 = [];\n        function initializeState() {\n                //     console.log(artists);\n                if(user)\n                for (let i = 0; i < user['favoriteartists'].length; i++) {\n\n                        s.getArtist(user['favoriteartists'][i]).then(\n                                res => {\n                                        //      console.log(artists[i]);\n                                        temp.push(res.name);\n                                        temp2.push(res.images[0].url);\n                                        temp3.push(user['favoriteartists'][i]);\n                                        //      console.log(temp);\n                                        //      console.log(res);\n                                        //      console.log(temp);\n                                        if (temp.length == 20) {\n                                                //      console.log(temp);\n                                                setNames(temp);\n                                                setImages(temp2);\n                                                setOrdererdArtists(temp3);\n                                        }\n\n                                }).catch(err => console.log(err));\n                }\n                //      console.log(temp);\n                //      console.log(temp2);\n                //      setNames(temp);\n                //      setImages(temp2);\n\n\n        }\n\n        const ReturnFavArtist = ({ id }) => {\n                var artistname = artistnames[id];\n                var imageurl = artistimages[id];\n                // console.log(indexarray);\n                // console.log(artistimages)\n                if (imageurl) {\n                        //      console.log(imageurl);\n                        return (\n                                <div key={id.toString()} id={id}>\n                                        {/* mobile={16} tablet={8} computer={8} */}\n                                        <Link to={`/artist/${orderedArtists[id]}`} >\n                                                <Image rounded src={imageurl} verticalAlign='middle' />\n                                                <Header size='huge'>{artistname}</Header>\n                                        </Link>\n\n                                        <br></br>\n                                </div>);\n                }\n                else {\n                        // console.log(imageurl)\n                        return \"null\";\n                }\n        }\n        function returnSecondFavArtist(id) {\n                var artistname = artistnames[id];\n                var imageurl = artistimages[id];\n                // console.log(indexarray);\n                // console.log(artistimages)\n                if (imageurl) {\n                        //      console.log(imageurl);\n                        return (\n                                // <Grid.Row mobile={16} tablet={8} computer={4} id={id}> \n                                <div key={id.toString()} id={id}>\n                                        <Link to={`/artist/${orderedArtists[id]}`} >\n                                                <Image rounded src={imageurl} verticalAlign='middle' />\n                                                <Header size='huge'>{artistname}</Header>\n                                        </Link>\n                                        <br></br>\n                                </div>);\n                        // {/* </Grid.Row>); */}\n                }\n                else {\n                        // console.log(imageurl)\n                        return \"null\";\n                }\n        }\n        function returnThirdFavArtist(id) {\n                var artistname = artistnames[id];\n                var imageurl = artistimages[id];\n                // console.log(indexarray);\n                // console.log(artistimages)\n                if (imageurl) {\n                        //      console.log(imageurl);\n                        return (\n                                // <Grid.Column mobile={16} tablet={8} computer={4} id={id}> \n                                <div key={id.toString()} id={id}>\n                                        <Link to={`/artist/${orderedArtists[id]}`} >\n                                                <Image fluid rounded src={imageurl} verticalAlign='middle' />\n                                                <Header size='large'>{artistname}</Header>\n                                        </Link>\n                                        <br></br>\n                                        {/* </Grid.Column> */}\n                                </div>\n                        );\n                }\n                else {\n                        // console.log(imageurl)\n                        return \"null\";\n                }\n        }\n\n        //      console.log(artistnames)\n\n        return (\n                <div className=\"FavoriteArtists \">\n\n                        <Header size='huge'>Top Artists</Header>\n\n                        <Grid.Row >\n                                {artistimages.length > 15 ? indexarray.slice(0, 2).map(id => <ReturnFavArtist key={id.toString()} id={id} />) : \"\"}\n                        </Grid.Row>\n\n                        <Grid.Row >\n                                {artistimages.length > 15 ? indexarray.slice(2, 4).map(id => <ReturnFavArtist key={id.toString()} id={id} />) : \"\"}\n                        </Grid.Row>\n\n                        <Grid.Row >\n                                {artistimages.length > 15 ? indexarray.slice(4, 6).map(id => <ReturnFavArtist key={id.toString()} id={id} />) : \"\"}\n                        </Grid.Row>\n\n                        <Grid.Row>\n                                {artistimages.length > 15 ? indexarray.slice(6, 10).map(id => returnSecondFavArtist(id)) : \"\"}\n                        </Grid.Row>\n\n                        <Grid.Row>\n                                {artistimages.length > 19 ? indexarray.slice(10, 14).map(id => returnSecondFavArtist(id)) : \"\"}\n                        </Grid.Row>\n\n                        <Grid.Row>\n                                {artistimages.length > 19 ? indexarray.slice(14, 21).map(id => returnThirdFavArtist(id)) : \"\"}\n                        </Grid.Row>\n\n\n                </div>\n\n        )\n}\n\n\nexport default FavoriteArtists;","\nimport React, { useState, useEffect, isValidElement, useContext } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { Grid, Image, Header, Search, Button, Container } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { InfoContext } from '../App';\n\n\nconst mongoose = require('mongoose');\nconst s = new Spotify();\nconst FavoriteSongs = ({ songs, refreshtoken }) => {\n        const { accesstoken, user } = useContext(InfoContext);\n        const [songnames, setNames] = useState([]);\n        const [songimages, setImages] = useState([]);\n        const [orderedSongs, setOrderedSongs] = useState([]);\n        var array = [...Array(20).keys()];\n        const [indexarray, setIndex] = useState(array);\n\n        s.setAccessToken(accesstoken);\n        useEffect(initializeState, [user]);\n        var temp = [];\n        var temp2 = [];\n        var temp3 = [];\n        function initializeState() {\n                console.log(user);\n                if (user) {\n\n\n                        for (let i = 0; i < user['favoritesongs'].length; i++) {\n                                //     console.log(\"This is songs\",songs)\n                                s.getTrack(user['favoritesongs'][i]).then(\n                                        res => {\n                                                temp.push(res.name);\n                                                temp2.push(res.album.images[0].url);\n                                                temp3.push(user['favoritesongs'][i]);\n                                                //      console.log(\"Inside then\")\n                                                //      console.log(res);\n                                                //      console.log(temp);\n                                                if (temp.length == 20) {\n                                                        setNames(temp);\n                                                        setImages(temp2);\n                                                        setOrderedSongs(temp3);\n                                                }\n\n                                        }).catch(err => console.log(err));\n                        }\n                }\n                //      console.log(temp);\n                //      console.log(temp2);\n                //      setNames(temp);\n                //      setImages(temp2);\n\n\n        }\n\n        const ReturnFavSong = ({ id }) => {\n                var songName = songnames[id];\n                var imageurl = songimages[id];\n                // console.log(indexarray);\n                // console.log(artistimages)\n                if (imageurl) {\n                        //      console.log(imageurl);\n                        return (\n                                <Grid.Column key={id.toString()} mobile={16} tablet={8} computer={8} id={id}>\n                                        <Link to={`/track/${orderedSongs[id]}`} >\n                                                <Image size='huge' rounded verticalAlign='middle' src={imageurl} />\n                                                <Header size='huge'>{songName}</Header>\n                                        </Link>\n\n                                        <br></br>\n                                </Grid.Column>);\n                }\n                else {\n                        // console.log(imageurl)\n                        return \"null\";\n                }\n        }\n        function returnSecondFavSong(id) {\n                var songName = songnames[id];\n                var imageurl = songimages[id];\n                // console.log(indexarray);\n                // console.log(artistimages)\n                if (imageurl) {\n                        //      console.log(imageurl);\n                        return (\n                                <Grid.Column key={id.toString()} mobile={16} tablet={8} computer={4} id={id}>\n                                        <Link to={`/track/${orderedSongs[id]}`} >\n                                                <Image rounded src={imageurl} verticalAlign='middle' />\n                                                <Header size='huge'>{songName}</Header>\n                                        </Link>\n                                        <br></br>\n                                </Grid.Column>);\n                }\n                else {\n                        // console.log(imageurl)\n                        return \"null\";\n                }\n        }\n        function returnThirdFavSong(id) {\n                var songName = songnames[id];\n                var imageurl = songimages[id];\n                // console.log(indexarray);\n                // console.log(artistimages)\n                if (imageurl) {\n                        //      console.log(imageurl);\n                        return (\n                                <Grid.Column key={id.toString()} mobile={16} tablet={8} computer={4} id={id}>\n                                        <Link to={`/track/${orderedSongs[id]}`} >\n                                                <Image rounded src={imageurl} verticalAlign='middle' />\n                                                <Header size='large'>{songName}</Header>\n                                        </Link>\n                                        <br></br>\n                                </Grid.Column>);\n                }\n                else {\n                        // console.log(imageurl)\n                        return \"null\";\n                }\n        }\n\n        //      console.log(artistnames)\n        return (\n                <div className=\"FavoriteArtists \">\n\n\n\n                        <Header size='huge'>Top Songs</Header>\n\n                        <Grid.Row >\n                                {songimages.length > 15 ? indexarray.slice(0, 2).map(id => <ReturnFavSong key={id.toString()} id={id} />) : \"\"}\n                        </Grid.Row>\n\n                        <Grid.Row >\n                                {songimages.length > 15 ? indexarray.slice(2, 4).map(id => <ReturnFavSong key={id.toString()} id={id} />) : \"\"}\n                        </Grid.Row>\n\n                        <Grid.Row >\n                                {songimages.length > 15 ? indexarray.slice(4, 6).map(id => <ReturnFavSong key={id.toString()} id={id} />) : \"\"}\n                        </Grid.Row>\n\n                        <Grid.Row>\n                                {songimages.length > 15 ? indexarray.slice(6, 10).map(id => returnSecondFavSong(id)) : \"\"}\n                        </Grid.Row>\n\n                        <Grid.Row>\n                                {songimages.length > 19 ? indexarray.slice(10, 14).map(id => returnSecondFavSong(id)) : \"\"}\n                        </Grid.Row>\n\n                        <Grid.Row>\n                                {songimages.length > 19 ? indexarray.slice(14, 21).map(id => returnThirdFavSong(id)) : \"\"}\n                        </Grid.Row>\n\n\n                </div>\n\n        )\n}\n\nexport default FavoriteSongs;","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport apiKey from './api-Key';\nimport 'firebase/storage'\nimport 'firebase/messaging'\n\n\nconst firebaseConfig = {\n        apiKey: apiKey,\n        authDomain: \"nearify-f2a4a.firebaseapp.com\",\n        databaseURL: \"https://nearify-f2a4a.firebaseio.com\",\n        projectId: \"nearify-f2a4a\",\n        storageBucket: \"nearify-f2a4a.appspot.com\",\n        messagingSenderId: \"442855937718\",\n        appId: \"1:442855937718:web:f1f6b7b42ca928efec3817\",\n        measurementId: \"G-HV3MDELM9K\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\nconst messages = firebase.messaging();\n// messages.requestPermission()\n// .then(function() {\n//         console.log('have permission');\n//         return messages.getToken();\n// })\n// .then(function(token){\n//         console.log(token);\n// })\n// .catch(function(err){\n//         console.log(err);\n// })\n\n// messages.onMessage(function(payload){\n//         console.log('onmessage',payload);\n// })\nexport default storage;\nexport const messaging= messages;\nexport const dbArtists = firebase.database().ref().child('artists');\nexport const dbUsers = firebase.database().ref().child('users');\nexport const dbSongs  = firebase.database().ref().child('songs');\nexport const dbPosts = firebase.database().ref().child('posts');\nexport const dbMessages = firebase.database().ref().child('messages');\nexport const dbReplies = firebase.database().ref().child('replies');\nexport const dbLikes = firebase.database().ref().child('likes');\nexport const dbChats = firebase.database().ref().child('chats');\n\n\n\n","var apiKey = \"AIzaSyCpM-5_mw366JiwTsC6yaNeuK3leQbQrlI\"\nexport default apiKey;\n\n","const DatetoTime = (input) => {\n        const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        let temp;\n        let date = new Date(input);\n        temp = (months[(date).getMonth()]) + \" \" + (date).getDate().toString()+\" \";\n        let HH, MM, AP;\n        if (date.getHours() >= 12) {\n          HH = ((date).getHours().toString() - 12)\n          AP = \"PM\";\n        }\n        else {\n          HH = ((date).getHours().toString())\n          AP = \"AM\";\n        }\n        if (date.getMinutes() < 10) {\n          MM = + \"0\" + date.getMinutes().toString();\n        } else {\n          MM = date.getMinutes().toString();\n        }\n        temp = temp + HH + \":\" + MM + AP;\n        return temp;\n      }\nexport default DatetoTime;","import React, {useState, useEffect, isValidElement, useContext} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport axios from 'axios'\nimport {Divider, Grid, Image, Header, Container, Form, TextArea, Button, Rail, Segment, Feed, FeedContent, Icon, Label, Loader} from 'semantic-ui-react'\nimport {Router , useParams} from  'react-router-dom';\nimport {dbArtists, dbPosts, dbReplies, dbLikes} from '../firebase/firebase'\nimport {InfoContext} from '../App'\nimport DateToTime from '../DateToTime'\nconst mongoose = require('mongoose');\nconst s = new Spotify();\n\nconst ReturnReply = React.memo(({reply})=>{\n        const {replies, setReplies, artists, setArtists, messages, setMessages, songs, setSongs, posts, setPosts, likes, setLikes, user, setUser, accesstoken, setAccesToken, refreshtoken, setRefreshtoken} = React.useContext(InfoContext);\n\n        if(reply){\n          const[replier, setreplier]=useState(\"\");\n          var redirectUri= process.env.NODE_ENV == 'production' ? `https://pure-harbor-26317.herokuapp.com/users/` : `http://localhost:8888/users/`\n          var replierid=reply['posterid'];\n           axios.get(`${redirectUri}${replierid}`)\n           .then(response => {\n            setreplier(response.data[0]);\n           })\n           .catch(function (error) {\n             console.log(error);\n           });\n          \n          return (\n         <div>\n           <Segment attached secondary={true} compact>\n               <Grid columns = {2}>\n  \n                   <Grid.Column width={4}>\n                  \n                   {replier ? <div >\n                     <Image style={{marginLeft:\"10px\" ,textAlign:\"center\"}} circular src={replier.image} size='tiny' ></Image>\n                     <Header style={{textAlign:\"center\", marginTop:\"5px\", marginLeft:\"18px\"}} as='h6'>{`${replier.name}`}</Header>\n              </div> : <Loader active inline='centered' /> }\n            </Grid.Column>\n            <Grid.Column width={12}>\n            <Header as='h4' style={{marginTop:\"5px\", marginLeft:\"25px\"}}>\n           {reply['content']}\n          </Header>\n             \n               </Grid.Column>\n            </Grid>\n                 \n  \n            </Segment>\n             {/* <Segment raised attached style={{marginTop:\"-15px\"}}>\n             <Button color='red'>\n                <Icon name='heart' />\n                  Like\n              </Button>\n              \n  \n              <Label as='a' basic color='red' pointing='left'>\n                {likes[reply['likes']] != 0 ? Object.values(likes[reply['likes']]).length:0}\n              </Label>\n              </Segment> */}\n              </div>\n  \n          \n          );\n        }\n       \n        \n         else{\n         \n          console.log(\"Loading\")\n           return <div>loading</div>\n         }\n        \n       });\n\nexport default ReturnReply;","\nimport React, {useState, useEffect, isValidElement, useContext, useRef} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport axios from 'axios'\nimport {Divider, Grid, Image, Header, Container, Form, TextArea, Button, Rail, Segment, Feed, FeedContent, Icon, Label, Loader} from 'semantic-ui-react'\nimport {Router , useParams} from  'react-router-dom';\nimport {dbArtists, dbPosts, dbReplies, dbLikes} from '../firebase/firebase'\nimport {InfoContext} from '../App'\nimport DateToTime from '../DateToTime'\nimport ReturnReply from './Reply'\n\nconst  AddReply =({item , id})=> {\n        const {replies, setReplies, artists, setArtists, messages, setMessages, songs, setSongs, posts, setPosts, likes, setLikes, user, setUser, accesstoken, setAccesToken, refreshtoken, setRefreshtoken} = React.useContext(InfoContext);\n        const [value,setValue]=useState(\"\");\n        const refKey = useRef();\n                function eventhandler(e) {\n                  console.log(e);\n                if (e.key === 'Enter') {\n                 handleSubmitReply();\n                 console.log(\"Works\");\n               }\n               console.log(\"Works outside\");\n            }\n\n        function handleSubmitReply(){\n                console.log(document.getElementById(\"textareareply\").value);\n                const likesref=dbLikes.push(0);\n                const likeskey=likesref.getKey();\n                console.log(\"Likes key is \", likeskey);\n               \n                const ref = dbReplies.child(item['replies']).push({\n                  'content':value,\n                  'posterid': user.id,\n                  'likes': likeskey,\n                  \"createdAt\": {'.sv': 'timestamp'}\n                });\n                if(!user.postsfollowing.includes(id)){  \n                var redirectUri= process.env.NODE_ENV == 'production' ? `https://pure-harbor-26317.herokuapp.com/users/addpost/` : `http://localhost:8888/users/addpost/`\n                axios.post(`${redirectUri}${user.id}/${id}`)\n                .then(response => {\n                     console.log(\"updated!\", response);\n                })\n                .catch(function (error) {\n                     console.log(error);\n                  });\n                var temp= user;\n                console.log(temp);\n                // var array = temp.postsfollowing;\n                // array.add(id);\n                temp.postsfollowing.push(id);\n                console.log(temp);\n                setUser(temp);\n                // user.postsfollowing.push(id);\n                // setUser()\n                }\n                 \n\n      setValue(\"\")\n            \n              }\n        // useEffect(() => {\n        //   refKey.current.addEventListener(\"keyup\", eventhandler);\n        //   return () => {\n        //         refKey.current.removeEventListener(\"keyup\", eventhandler);\n        //   };\n        // }, []);\n      \n        return(\n                    \n        <div>\n                <TextArea onKeyUp={(e) => eventhandler(e)} ref={refKey} id=\"textareareply\" value={value} onChange={(e)=>{\n                  setValue(e.target.value);\n                  console.log(e.target.value);\n                }} rows={1} placeholder='Reply to post' /> \n                {/* <Form.Button fluid positive onClick = {()=>handleSubmitReply()} style={{marginTop:\"10px\"}}>Reply</Form.Button>  */}\n       </div>\n)}\n\nexport default AddReply;","\nimport React, {useState, useEffect, isValidElement, useContext, useRef} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport axios from 'axios'\nimport {Divider, Grid, Image, Header, Container, Form, TextArea, Button, Rail, Segment, Feed, FeedContent, Icon, Label, Loader} from 'semantic-ui-react'\nimport {Router , useParams} from  'react-router-dom';\nimport {dbArtists, dbPosts, dbReplies, dbLikes} from '../firebase/firebase'\nimport {InfoContext} from '../App'\nimport DateToTime from '../DateToTime'\nimport ReturnReply from './Reply'\nimport AddReply from './AddReply';\n\nconst ReturnPost = React.memo(({item, id}) =>{\n        const {replies, setReplies, artists, setArtists, messages, setMessages, songs, setSongs, posts, setPosts, likes, setLikes, user, setUser, accesstoken, setAccesToken, refreshtoken, setRefreshtoken} = React.useContext(InfoContext);\n        const [poster, setPoster]=useState(\"\");\n        const [showReply, setShowReply]=useState(false);\n    \n        const replyRef = useRef();\n\n       if(item ){\n           var redirectUri= process.env.NODE_ENV == 'production' ? `https://pure-harbor-26317.herokuapp.com/users/` : `http://localhost:8888/users/`\n           var time= DateToTime(item['createdAt'])\n            const posterid=item['posterid'];\n            axios.get(`${redirectUri}${posterid}`)\n            .then(response => {\n             setPoster(response.data[0]);\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n            \n   \n            function updateLike(){\n             console.log(\"Called outside if/else.\");\n             console.log(Object.values(likes[item['likes']]));\n   \n              if(likes[item['likes']]!=0 && Object.values(likes[item['likes']]).includes(user.id)){\n                \n               console.log(\"Called inside if\");\n               console.log(Object.values(likes[item['likes']]));\n                for(let i=0; i<Object.values(likes[item['likes']]).length; i++){\n   \n                   if(Object.values(likes[item['likes']])[i]==user.id){\n                     var index=Object.keys(likes[item['likes']])[i];\n                     if(Object.values(likes[item['likes']]).length==1){\n                       dbLikes.child(item['likes']).set(0);\n                     }\n                     else{\n                       dbLikes.child(item['likes']).remove(index).then(console.log(\"Done\")).catch(err=>console.log(err));\n                     }\n                     \n                   }\n                }\n   \n              }\n              \n              else{\n               \n               console.log(\"Called.\")\n               \n   \n               dbLikes.child(item['likes']).push(user.id).then(console.log(\"Done\")).catch(err=>console.log(err));;\n               var redirectUri= process.env.NODE_ENV == 'production' ? `https://pure-harbor-26317.herokuapp.com/users/addpost/` : `http://localhost:8888/users/addpost/`\n               axios.post(`${redirectUri}${user.id}/${id}`)\n               .then(response => {\n                   console.log(\"updated!\", response);\n                   })\n               .catch(function (error) {\n                 console.log(error);\n               });\n               var temp= user;\n                console.log(temp);\n                // var array = temp.postsfollowing;\n                // array.add(id);\n                temp.postsfollowing.push(id);\n                console.log(temp);\n               setUser(temp);\n\n\n\n              }\n             \n            }\n   \n            \n          \n        \n            return(\n             \n             \n             <div>\n              <Segment attached>\n                 \n                 {poster ? \n                  <Grid centered >\n                    <Grid.Row>\n                     <Grid.Column width={5}>        \n                          <Image circular src={poster.image} size='medium' ></Image>\n                          <Grid.Row>\n                        <Header as={\"h4\"} textAlign=\"center\" style={{marginTop:\n                        \"10px\"}}>\n                            {`${poster.name}`}\n                        </Header>\n                        </Grid.Row>\n                      </Grid.Column>\n                      <Grid.Column width={11}>\n                         <Label as='a' basic color='red' size=\"huge\" pointing='left' style={{marginTop:\"12px\"}}>\n                            {item['content']}\n                        </Label>\n                     </Grid.Column>\n                     </Grid.Row>\n                     <Grid.Row style={{marginTop:\"-20px\", marginBottom: \"-10px\"}}>\n                  <Grid.Column width={8}>\n                 <Header  as=\"h5\" color='gray' >\n                  {likes[item['likes']] != 0 ? Object.values(likes[item['likes']]).length :0}\n                  {' Likes & '}\n                  {replies[item['replies']] != 0 ? Object.values(replies[item['replies']]).length :0}\n                  {' Replies'}\n                </Header>\n                </Grid.Column>\n                <Grid.Column width={3}>\n\n                </Grid.Column>\n                <Grid.Column width={5}>\n                <Header  as=\"h5\" color='gray' >\n                  {`${time}`}\n                </Header>\n                </Grid.Column>\n                  \n                  \n                     </Grid.Row>\n                     {/* <Grid.Column width={3} >\n                       <Button color='red' size=\"mini\" onClick={()=>{updateLike();}}>\n                         <Icon name='heart' />\n                            Like\n                       </Button>\n\n                     </Grid.Column> */}\n              </Grid>\n                : <Loader active inline='centered' />  }\n              </Segment>\n               {/* <Segment raised attached style={{marginTop:\"-15px\"}}> */}\n               {/* <Button color='red' onClick={()=>{updateLike();}}>\n                  <Icon name='heart' />\n                    Like\n                </Button> */}\n                \n   \n                {/* <Label as='a' basic color='red' pointing='left'>\n                  {likes[item['likes']] != 0 ? Object.values(likes[item['likes']]).length:0}\n                </Label>\n                <Header style={{textAlign:\"center\", marginTop:\"-10px\"}} as='h6'> {`${time}`}</Header> */}\n\n                {/* </Segment> */}\n                {replies[item['replies']] != 0 && showReply? \n                 Object.values(replies[item['replies']]).map(id => <ReturnReply key={id.posterid+id.createdAt} reply={id}></ReturnReply>)\n               \n                :\"\"}\n               \n           <Segment attached='bottom'>\n                   {/* onSubmit={()=>handleSubmitReply()} */}\n             <Form >\n              <AddReply item={item} id={id} />\n               <Button fluid onClick={()=>{updateLike();}} >\n                  <Icon color=\"\" name='heart' />\n                    { Object.values(likes[item['likes']]).includes(user.id) ? \"Unlike\": \"Like\"}\n                  </Button> \n             </Form> \n           </Segment>\n           {replies[item['replies']] != 0 && !showReply? \n               <Form.Button fluid positive onClick = {()=>setShowReply(true)} style={{marginTop:\"10px\"}}>Show Replies</Form.Button> \n\n                :\n                replies[item['replies']] != 0 ? <Form.Button fluid positive onClick = {()=>setShowReply(false)} style={{marginTop:\"10px\"}}>Hide Replies</Form.Button> \n                  : \"\"\n                }\n                </div>       \n            )\n         }\n          else{\n            return(<Loader active inline='centered' />)\n          }\n        });\n\n        function useEventListener(eventName, handler, element = window){\n          // Create a ref that stores handler\n          const savedHandler = useRef();\n          \n          // Update ref.current value if handler changes.\n          // This allows our effect below to always get latest handler ...\n          // ... without us needing to pass it in effect deps array ...\n          // ... and potentially cause effect to re-run every render.\n          useEffect(() => {\n            savedHandler.current = handler;\n          }, [handler]);\n        \n          useEffect(\n            () => {\n              // Make sure element supports addEventListener\n              // On \n              const isSupported = element && element.addEventListener;\n              if (!isSupported) return;\n              \n              // Create event listener that calls handler function stored in ref\n              const eventListener = event => savedHandler.current(event);\n              \n              // Add event listener\n              element.addEventListener(eventName, eventListener);\n              \n              // Remove event listener on cleanup\n              return () => {\n                element.removeEventListener(eventName, eventListener);\n              };\n            },\n            [eventName, element] // Re-run if eventName or element changes\n          );\n        };\n\nexport default ReturnPost;\n\n// useEffect(() => {\n//   const div = replyRef.current;\n//   // subscribe event\n//   div.addEventListener(\"keyup\", function(e) {\n//     if (e.code === 'Enter') {\n//      handleSubmitReply();\n//       console.log(\"Go\");\n//    }\n//  console.log(\"Works\");\n// });\n//   return () => {\n//     // unsubscribe event\n//     div.removeEventListener(\"keyup\", function(e) {\n//       if (e.code === 'Enter') {\n//        handleSubmitReply();\n//         console.log(\"Go\");\n//      }\n//    console.log(\"Works\");\n//   });}\n// }, []);","\nimport React, {useState, useEffect, isValidElement, useContext, useRef} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport axios from 'axios'\nimport {Divider, Grid, Image, Header, Container, Form, TextArea, Button, Rail, Segment, Feed, FeedContent, Icon, Label, Loader} from 'semantic-ui-react'\nimport {Router , useParams} from  'react-router-dom';\nimport {dbArtists, dbPosts, dbReplies, dbLikes} from '../firebase/firebase'\nimport {InfoContext} from '../App'\nimport DateToTime from '../DateToTime'\nimport ReturnReply from './Reply'\nimport AddReply from './AddReply';\n\nconst ReturnPost = React.memo(({item, id, includeHeader}) =>{\n        const {replies, setReplies, artists, setArtists, messages, setMessages, songs, setSongs,posts, setPosts, likes, setLikes, user, setUser, accesstoken, setAccesToken, refreshtoken, setRefreshToken} = React.useContext(InfoContext);\n        const [poster, setPoster]=useState(\"\");\n        const [showReply, setShowReply]=useState(false);\n        const [type, setType]=useState(\"track\");\n        const [artistName, setArtistName]=useState(\"\");\n        const [trackName, setTrackName]=useState(\"\");\n        const arrayColors = ['red','orange','yellow','olive','green','teal','blue','violet','purple','pink','brown','grey','black'];\n        const number = Math.floor((Math.random() * 12) );\n\n        const replyRef = useRef();\n        useEffect(()=>{\n           if(item && item['artistid'] && artists){\n              setType('artist');\n              setArtistName(artists[item['artistid']]['name']);\n            }\n            else if (item && item['trackid'] && songs){\n              setType('track');\n              setTrackName(songs[item['trackid']]['name']);\n              console.log(\"here!\")\n            }\n        }, [item])\n\n       if(item ){\n           var redirectUri= process.env.NODE_ENV == 'production' ? `https://pure-harbor-26317.herokuapp.com/users/` : `http://localhost:8888/users/`\n           var time= DateToTime(item['createdAt'])\n            const posterid=item['posterid'];\n            axios.get(`${redirectUri}${posterid}`)\n            .then(response => {\n             setPoster(response.data[0]);\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n           \n\n            function updateLike(){\n             console.log(\"Called outside if/else.\");\n             console.log(Object.values(likes[item['likes']]));\n   \n              if(likes[item['likes']]!=0 && Object.values(likes[item['likes']]).includes(user.id)){\n                \n               console.log(\"Called inside if\");\n               console.log(Object.values(likes[item['likes']]));\n                for(let i=0; i<Object.values(likes[item['likes']]).length; i++){\n   \n                   if(Object.values(likes[item['likes']])[i]==user.id){\n                     var index=Object.keys(likes[item['likes']])[i];\n                     if(Object.values(likes[item['likes']]).length==1){\n                       dbLikes.child(item['likes']).set(0);\n                     }\n                     else{\n                       dbLikes.child(item['likes']).remove(index).then(console.log(\"Done\")).catch(err=>console.log(err));\n                     }\n                     \n                   }\n                }\n   \n              }\n              \n              else{\n               \n               console.log(\"Called.\")\n               \n   \n               dbLikes.child(item['likes']).push(user.id).then(console.log(\"Done\")).catch(err=>console.log(err));;\n               var redirectUri= process.env.NODE_ENV == 'production' ? `https://pure-harbor-26317.herokuapp.com/users/addpost/` : `http://localhost:8888/users/addpost/`\n               axios.post(`${redirectUri}${user.id}/${id}`)\n               .then(response => {\n                   console.log(\"updated!\", response);\n                   })\n               .catch(function (error) {\n                 console.log(error);\n               });\n               var temp= user;\n                console.log(temp);\n                // var array = temp.postsfollowing;\n                // array.add(id);\n                temp.postsfollowing.push(id);\n                console.log(temp);\n               setUser(temp);\n\n\n\n              }\n             \n            }\n   \n            \n           if((artistName || trackName)){\n            return(\n              <div>\n               <Segment attached>\n                  \n                  {poster ? \n                   <Grid centered >\n                        <Grid.Row>\n                          <div>\n\n                     <Image circular src={poster.image} size=\"small\" avatar ></Image>\n\n                     {includeHeader ?   <Header as={'h3'}>{`${poster.name}`} {\"posted to  \"}{ type== 'artist' ?  artistName : trackName}{\"'s wall\"}</Header> : <Header as={'h3'}>{`${poster.name}`}</Header>}\n                       </div>\n                </Grid.Row>\n                     <Grid.Row>\n                       <Grid.Column width={16} style={{alignContent:\"center\"}}>\n                         <Segment centered color={arrayColors[number]}> \n                          <Header as=\"h1\">{item['content']}</Header>\n\n                         </Segment>\n                      </Grid.Column>\n                      </Grid.Row>\n                      <Grid.Row style={{marginTop:\"-20px\", marginBottom: \"-10px\"}}>\n                   <Grid.Column width={8}>\n                  <Header  as=\"h3\" color='gray' >\n                   {likes[item['likes']] != 0 ? Object.values(likes[item['likes']]).length :0}\n                   {' Likes & '}\n                   {replies[item['replies']] != 0 ? Object.values(replies[item['replies']]).length :0}\n                   {' Replies'}\n                 </Header>\n                 </Grid.Column>\n                 <Grid.Column width={3}>\n \n                 </Grid.Column>\n                 <Grid.Column width={5}>\n                 <Header  as=\"h3\" color='gray' >\n                   {`${time}`}\n                 </Header>\n                 </Grid.Column>\n                   \n                   \n                      </Grid.Row>\n               </Grid>\n                 : <div>\n                   <Loader active inline='centered' />\n                 </div>\n                   }\n               </Segment>\n                 {replies[item['replies']] != 0 && showReply? \n                  Object.values(replies[item['replies']]).map(id => <ReturnReply key={id.posterid+id.createdAt} reply={id}></ReturnReply>)\n                \n                 :\"\"}\n                \n            <Segment attached='bottom'>\n                    {/* onSubmit={()=>handleSubmitReply()} */}\n              <Form >\n               <AddReply item={item} id={id} />\n                <Button fluid onClick={()=>{updateLike();}} >\n                   <Icon color=\"\" name='heart' />\n                     { Object.values(likes[item['likes']]).includes(user.id) ? \"Unlike\": \"Like\"}\n                   </Button> \n              </Form> \n            </Segment>\n            {replies[item['replies']] != 0 && !showReply? \n                <Form.Button fluid positive onClick = {()=>setShowReply(true)} style={{marginTop:\"10px\"}}>Show Replies</Form.Button> \n \n                 :\n                 replies[item['replies']] != 0 ? <Form.Button fluid positive onClick = {()=>setShowReply(false)} style={{marginTop:\"10px\"}}>Hide Replies</Form.Button> \n                   : \"\"\n                 }\n                 </div>       \n             )\n\n          }\n         \n         }\n          else{\n            return(\n              <div>\n            <Loader active inline='centered' />\n            {/* {id} */}\n            </div>\n            \n            )\n          }\n        });\n\n        \nexport default ReturnPost;\n\n// useEffect(() => {\n//   const div = replyRef.current;\n//   // subscribe event\n//   div.addEventListener(\"keyup\", function(e) {\n//     if (e.code === 'Enter') {\n//      handleSubmitReply();\n//       console.log(\"Go\");\n//    }\n//  console.log(\"Works\");\n// });\n//   return () => {\n//     // unsubscribe event\n//     div.removeEventListener(\"keyup\", function(e) {\n//       if (e.code === 'Enter') {\n//        handleSubmitReply();\n//         console.log(\"Go\");\n//      }\n//    console.log(\"Works\");\n//   });}\n// }, []);","\nimport React, {useState, useEffect, isValidElement, useContext} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport axios from 'axios'\nimport {Divider, Grid, Image, Header, Container, Form, TextArea, Button, Rail, Segment, Feed, FeedContent, Icon, Label} from 'semantic-ui-react'\nimport {Router , useParams, Redirect} from  'react-router-dom';\nimport {dbArtists, dbPosts, dbReplies, dbLikes} from '../firebase/firebase'\nimport {InfoContext} from '../App'\nimport DateToTime from '../DateToTime'\nimport ReturnPost from './Post'\nimport ReturnHomepagePost from './ReturnHomepagePost'\nconst mongoose = require('mongoose');\nconst s = new Spotify();\n\nconst HomePagePosts = () =>{\n     const {replies, setReplies, artists, setArtists, messages, setMessages, songs, setSongs, posts, setPosts, likes, setLikes, user, setUser, accesstoken, setAccesToken, refreshtoken, setRefreshtoken} = React.useContext(InfoContext);\n    //  const [timeout, setTime]=useState(false);\n     const [returnPosts, setReturnPosts]=useState([]);\n     const [orderedTime, setOrderedTime]=useState(false);\n     const arrayColors = ['red','orange','yellow','olive','green','teal','blue','violet','purple','pink','brown','grey','black'];\n     const number = Math.floor((Math.random() * 12) );\n     useEffect(initializeState, [artists, songs, posts]);\n     function initializeState(){\n      // console.log(user);\n      // console.log(user['favoriteartists']);\n      // console.log(user);\n      // console.log(user.favoriteartists);\n      // console.log(user['favoriteartists']);\n\n      var temp=[];\n     for(let i=0; i<user.favoriteartists.length;i++){\n      //  console.log(\"Outside of IF\");\n      //  console.log(\"This is i \", i);  \n      //  console.log(user['favoriteartists'][i]);\n       if(artists && artists[user['favoriteartists'][i]]){\n        console.log(artists[user['favoriteartists'][i]]['name']);\n\n       }\n       console.log(artists);\n\n      if(artists &&artists[user['favoriteartists'][i]] &&artists[user.favoriteartists[i]]['posts']!=\"None\"){\n        var values= Object.values(artists[user['favoriteartists'][i]]['posts']);\n        // console.log(\"Inside of IF\");\n        // console.log(\"This is i \", i);  \n        // console.log(user['favoriteartists'][i]);\n        // console.log(values);\n\n        if(values.length>=3){\n          // console.log(\"Here\");\n          values.slice(-3).map(id=>temp.push(id));\n        }\n\n        else if(values.length>1){\n          console.log(\"Here2\");\n          values.slice(-2).map(id=>temp.push(id));;\n        }\n\n        else if(values.length==1){\n          // console.log(\"Here3\");\n          values.slice(-1).map(id=>temp.push(id));;\n        }\n \n       }\n      }\n      for(let i=0; i<user.favoritesongs.length;i++){\n        // console.log(\"Outside of IF\");\n       if(songs &&songs[user['favoritesongs'][i]] &&songs[user.favoritesongs[i]]['posts']!=\"None\"){\n         var values= Object.values(songs[user['favoritesongs'][i]]['posts']);\n        //  console.log(\"Inside of IF\");\n        //  console.log(\"This is i \", i);  \n        //  console.log(user['favoriteartists'][i]);\n        //  console.log(values);\n\n         if(values.length>=3){\n          //  console.log(\"Here\");\n           values.slice(-3).map(id=>temp.push(id));\n         }\n\n         else if(values.length>1){\n          //  console.log(\"Here2\");\n           values.slice(-2).map(id=>temp.push(id));;\n         }\n\n         else if(values.length==1){\n          //  console.log(\"Here3\");\n           values.slice(-1).map(id=>temp.push(id));;\n         }\n        }\n       }\n       if(posts){\n         temp.sort((a,b)=>posts[b]['createdAt']-posts[a]['createdAt']);\n         setReturnPosts(temp);\n         setOrderedTime(true);\n       }\n       setReturnPosts(temp);\n      // console.log(\"Ran initialize State\");\n      \n\n    }\n    \n     if(user){\n       localStorage.setItem('user', JSON.stringify(user));\n     }\n     else{\n       setUser(JSON.parse(localStorage.getItem('user')));\n     }\n     \n    \n     if(user && artists && songs && returnPosts.length>0){\n//  \n    //  console.log(user);\n    //  console.log(JSON.parse(localStorage.getItem('user')));\n    \n    // initializeState();\n     \n     return(\n  \n    <div className=\"HomepageFeed\">\n      <Container>\n      <Header as='h1' content={\"What's been up with your favorite music?\"} textAlign='center' dividing />\n      {/* {returnPosts.length > 0 ? returnPosts.map(id=> <ReturnHomePagePost postid={id} />) : \"No posts as yet\"} */}\n     {returnPosts && posts && orderedTime? returnPosts.map(id => \n      <Segment color={arrayColors[number]} raised style={{marginTop: \"40px\"}}>\n        <ReturnHomepagePost item={posts[id]} id={id} includeHeader={true} />\n      </Segment>\n      ) \n      : \" \"}\n      <Header as=\"h1\" > To start using the website, go to an artist's or song's page and then leave a post, reply or like! We hope this can be a place to talk about music!! If you like the idea, share this so we can build a community. </Header>\n      \n     {/* <ReturnHomepagePost item={posts['-MAUybwcC0MyDfwFhnqg']} id={'-MAUybwcC0MyDfwFhnqg'} /> */}\n      </Container>\n    </div> \n   \n        )\n       }\n      else{\n        // if (timeout){\n        //   return(<Redirect to=\"/\" push={true} />);\n        // }\n        // else{\n          return \"Loading\";\n        // }\n       \n      }\n}\n\nexport default HomePagePosts;\n\n  ","import { Header, Segment, Grid, Icon, Button, Search } from 'semantic-ui-react';\nimport React, {useState} from 'react';\nimport { Redirect, Link} from 'react-router-dom';\nimport _ from 'lodash'\nimport axios from 'axios'\nimport {InfoContext} from '../App'\nimport { Sidebar } from 'semantic-ui-react'\n\n\n\n\nconst PageHeader = ({access_token, id}) => {\n  const {replies, setReplies, artists, visible, setVisible, setArtists, messages, setMessages, songs, setSongs, posts, setPosts, likes, setLikes, user, setUser, accesstoken, setAccesToken, refreshtoken, setRefreshToken} = React.useContext(InfoContext);\n\n  const [value, setValue]=useState(\"\");\n  const [results, setResults]=useState([]);\n  const [isLoading, setisLoading]=useState(false);\n  const [result, setResult]=useState(\"\");\n  const [redirectArtist, setRedirectArtist]=useState(false);\n  const [redirectTrack, setRedirectTrack]=useState(false);\n  const [redirectLogout, setRedirectLogout]=useState(false);\n  const [redirectSettings, setRedirectSettings]=useState(false);\n  const [logout, setLogout]=useState(false);\n  const [home, setRedirectHome]=useState(false);\n\n  async function  handleSearchChange(valuee)  {\n    setisLoading(true);\n    setValue(valuee);\n    console.log(valuee);\n    const url='https://api.spotify.com/v1/search'+`?q=${encodeURIComponent(valuee)}`+\"&type=artist\"\n    const res = await axios.get(url, {\n            headers:{\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    'Authorization': 'Bearer ' + accesstoken \n            }\n    });\n    var temp=[];\n    console.log(res);\n    var max=res.data.artists.items.length;\n    var realistic=10;\n    if(max<realistic){\n      realistic=max;\n    }\n    for(let i=0; i<realistic; i++){\n            let item=res.data.artists.items[i];\n            // console.log(item);\n            if(item.images[0]){\n                    temp.push({title: item.name, image: item.images[0].url, description: item.genres[0], price: item.popularity, id: item.id, type: \"artist\"})\n  \n            }\n            else{\n                    //if no pictures just put a black picture\n                    temp.push({title: item.name, image: \"https://images.unsplash.com/photo-1554050857-c84a8abdb5e2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=564&q=80\", description: item.genres[0], price: item.popularity, id: item.id, type: \"artist\"})\n            }\n    }\n  \n    const urltrack='https://api.spotify.com/v1/search'+`?q=${encodeURIComponent(valuee)}`+\"&type=track\"\n  \n    const ressong = await axios.get(urltrack, {\n      headers:{\n              \"Accept\": \"application/json\",\n              \"Content-Type\": \"application/json\",\n              'Authorization': 'Bearer ' + accesstoken \n      }\n  });\n  // console.log(\"this is res SONG\",ressong);\n  var max=ressong.data.tracks.items.length;\n  var realistic=10;\n  if(max<realistic){\n    realistic=max;\n  }\n  for(let i=0; i<realistic; i++){\n      let item=ressong.data.tracks.items[i];\n      console.log(item);\n      if(item.album.images[0]){\n              temp.push({title: item.name, image: item.album.images[0].url, description: item.album.name, price: item.popularity, id: item.id, type: \"track\"})\n  \n      }\n      else{\n              //if no pictures just put a black picture\n              // temp.push({title: item.name, image: \", description: item.genres[0], price: item.popularity, id: item.id})\n              temp.push({title: item.name, image: \"https://images.unsplash.com/photo-1554050857-c84a8abdb5e2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=564&q=80\", description: item.album.name, price: item.popularity, id: item.id, type: \"track\"})\n  \n            }\n  }\n    temp.sort((a,b)=>{\n     if( a.price > b.price ){\n       return -1;\n     }\n     else{\n       return 1;\n     };\n    })       \n    // console.log(temp);\n  \n    setResults(temp);\n    // console.log(temp);\n    setisLoading(false);\n  }\n    return (\n      <div>\n      <Segment\n      basic\n      style={{ backgroundColor: \"#1DB954\", textAlign: \"center\", marginBottom: \"10px\" }}\n      fluid=\"true\">\n        <Grid centered >\n          <Grid.Row>\n          <Grid.Column width={\"5\"}>\n          <Header\n            as={Link}\n            to={`/home/${access_token}/${id}`}\n            inverted \n            content=\"Nearify: Everything About Music.\" \n            size=\"huge\" \n            color=\"black\"\n            style={{cursor: \"default\"}}\n            \n          />\n          </Grid.Column>\n\n         <Grid.Column width={5} >\n            <Search\n            loading={isLoading}\n            onResultSelect={(e, {result})=>{\n                    setResult(result);\n                    console.log(result);\n                    // setRedirect(true);\n                    if(result.type==\"artist\"){\n                      setRedirectArtist(true);\n                    }\n                    else{\n                      setRedirectTrack(true);\n                    }\n                    \n            }}\n            onSearchChange={_.debounce((e, {value})=>handleSearchChange(value), 500, {\n              leading: true,\n            })}\n            results={results}\n            value={value}\n            fluid\n            input={{ fluid: true }}\n        //     {...this.props}\n          />\n          </Grid.Column>\n          <Grid.Column width={1}>\n            <Button.Group>\n            <Button onClick={()=>setRedirectHome(true)} inverted icon='home' color ='black' >\n            </Button>\n            <Button onClick={()=>setRedirectSettings(true)} inverted icon='settings' color ='black' >\n            </Button>\n            <Button inverted onClick={()=>{\n              setRedirectLogout(true);\n              setUser(\"\");\n            }} icon='arrow left' color ='black' >\n              Logout\n            </Button>\n            <Button inverted onClick={()=>{\n              setVisible(true);\n            }} icon='arrow left' color ='black' >\n              Menu\n            </Button>\n            </Button.Group>\n            {/* <Button inverted icon='arrow left' color ='black' >\n              Logout\n            </Button> */}\n          </Grid.Column>\n          </Grid.Row>\n          \n            </Grid>\n    </Segment>\n         \n          {redirectArtist ? <Redirect to={`/artist/${result.id}`} push={true} /> : \"\"}\n          {redirectTrack ? <Redirect to={`/track/${result.id}`} push={true} /> : \"\"}\n          {redirectLogout ? <Redirect to={`/`} push={true} /> : \"\"}\n          {redirectSettings ? <Redirect to={`/settings`} push={true} /> : \"\"}\n          {home ? <Redirect to={`/home/${user.id}/${accesstoken}/${refreshtoken}`} push={true} /> : \"\"}\n\n          </div>\n    \n    );\n  };\n\n  export default PageHeader;","import axios from 'axios'\nimport {Redirect} from 'react-router-dom'\nimport _ from 'lodash'\nimport React, {useState, useEffect, useContext} from 'react';\nimport {Container, Search, Grid} from 'semantic-ui-react'\nimport {Router , useParams} from  'react-router-dom';\nimport Spotify from 'spotify-web-api-js';\nimport FavoriteArtists from './favartists'\nimport FavoriteSongs from './favsongs'\nimport HomePagePosts from './HomePagePosts'\n\nimport PageHeader from './pageheader'\nimport {InfoContext} from '../App'\n\nconst mongoose = require('mongoose');\nconst s = new Spotify();\n\nconst HomePageFeed = () =>{\n  \n  var {id, access_token, refresh_token } = useParams();\n  const {replies, setReplies, artists, setArtists, messages, setMessages, songs, setSongs, posts, setPosts, likes, setLikes, user, setUser, accesstoken, setAccesToken, refreshtoken, setRefreshToken} = React.useContext(InfoContext);\n  \n  \n  setAccesToken(access_token); // double check on the logic behind this. \n  setRefreshToken(refresh_token);\n  s.setAccessToken(access_token);\n  // s.setRefreshToken(refresh_token);\n  const[nowPlaying, setNowPlaying]=useState({name: \"not checked\",image:\"\"});\n  const [value, setValue]=useState(\"\");\n  const [results, setResults]=useState([]);\n  const [isLoading, setisLoading]=useState(false);\n  const [result, setResult]=useState(\"\");\n  const [redirectArtist, setRedirectArtist]=useState(false);\n  const [redirectTrack, setRedirectTrack]=useState(false);\n  const [timeout, setTime]=useState(false);\n  const [newTrack, setNewTrack]=useState(false);\n  const [newArtist, setNewArtist]=useState(false);\n\n  // const [newArtist]\n  setTimeout(() => {\n    setTime(true);\n  }, 3000);\n\n  var redirectUri= process.env.NODE_ENV == 'production' ? `https://pure-harbor-26317.herokuapp.com/users/` : `http://localhost:8888/users/`\n\n        useEffect(handleData, []);\n        function handleData() {\n                axios.get(`${redirectUri}${id}`)\n                        .then(response => {\n                                setUser(response.data[0]);\n                        })\n                        .catch(function (error) {\n                                console.log(error);\n                        });\n        };\n\n\n return (\n    <div className=\"App\">\n      <Grid padded >\n      <Grid.Row stretched>  \n        <Grid.Column width = {3}>\n        {user['favoritesongs'] ? <FavoriteSongs songs={user['favoritesongs']} accesstoken={access_token} refreshtoken={refresh_token}/> : \"\" }\n\n        </Grid.Column>\n    \n        <Grid.Column width = {10}>\n         {user ? <HomePagePosts /> : \"\"}\n        </Grid.Column>\n        \n       \n        <Grid.Column width = {3}> \n      {user['favoriteartists'] ? <FavoriteArtists artists={user['favoriteartists']} accesstoken={access_token} refreshtoken={refresh_token}/> : \"\" }\n      </Grid.Column>\n      </Grid.Row>\n       </Grid>\n       \n      {redirectArtist ? <Redirect to={`/artist/${result.id}`} push={true} /> : \"\"}\n      {redirectTrack ? <Redirect to={`/track/${result.id}`} push={true} /> : \"\"}\n\n      {/* {!user   && timeout?  <Redirect to=\"/\" push={true} /> : \"\"} */}\n     \n      \n\n    </div>\n  );\n}\n\nexport default HomePageFeed;\n","import React, {useState} from 'react';\nimport {Input, Divider} from 'semantic-ui-react'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nconst primary = green[900]; // #f44336\n\n\n//test\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://i.ibb.co/pQBpgMz/streaks-black-stripes-green-lines-3840x2160-c2-000000-32cd32-l2-113-113-a-135-f-1.jpg)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide() {\n  const [nonSpotify, setNonSpotify] = useState(false);\n\n  const classes = useStyles();\n  var redirectableLogin= process.env.NODE_ENV === 'production' ? `https://pure-harbor-26317.herokuapp.com/login` : `http://localhost:8888/login`;\n  var redirectableSignup = process.env.NODE_ENV === 'production' ? `https://pure-harbor-26317.herokuapp.com/nonspotify/signup` : `http://localhost:3000/nonspotify/signup`;\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      \n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper} style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '85vh'}}>\n          \n          <Avatar className={classes.dark}>\n            <LockIcon style={{ color: 'green'}} />\n          </Avatar>\n         \n    {/* {!nonSpotify ?  */}\n    {/* <div>  */}\n            <a href= {redirectableLogin }>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Log in Spotify\n            </Button>\n             </a>\n\n            \n            {/* <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={()=>setNonSpotify(true)}\n            >\n              Other Login\n            </Button>\n            </div>  */}\n            {/* // :\n            \n            // <div>\n            //                  <Divider  hidden />\n\n            //    <Input size=\"big\" icon='users' iconPosition='left' placeholder='Enter Username...' />\n            //    <Divider   hidden />\n            //    <Input size=\"big\" icon='users' iconPosition='left' placeholder='Enter Password...' />\n            //    <Divider />\n            //    <a href= {redirectableSignup }>\n            //   <Button \n            //   type=\"submit\"\n            //   fullWidth\n            //   variant=\"contained\"\n            //   color=\"primary\"\n            //   className={classes.submit}\n              \n            // >\n            //   Sign up\n            // </Button>\n            // </a>\n            //   </div>}\n            */}\n             \n             \n        </div>\n      </Grid>\n    </Grid>\n  );\n}","import { Icon, Menu, Segment, Sidebar } from 'semantic-ui-react'\nimport { InfoContext } from '../App'\nimport { Router, useParams, Link } from 'react-router-dom';\nimport React, { useState, useEffect, useContext } from 'react';\n\nconst  SideBar=() =>{\n        const { visible, setVisible, user, accesstoken } = React.useContext(InfoContext);\n\n        return <Sidebar\n        as={Menu}\n        animation='overlay'\n        icon='labeled'\n        inverted\n        onHide={() => setVisible(false)}\n        vertical\n        visible={visible}\n        width='thin'\n>\n        <Menu.Item as={Link} to={`/${user.id}/${accesstoken}`} onClick={()=> setTimeout(() => setVisible(false), 500)}> \n                <Icon name='home' />\nHome\n</Menu.Item>\n<Menu.Item as={Link} to='/tracks' onClick={()=> setTimeout(() => setVisible(false), 500)}> \n                <Icon name='chat' />\nSongs\n</Menu.Item>\n{/* as={Link} to='/student/profile' */}\n        <Menu.Item as={Link} to='/artists' onClick={()=>setTimeout(() => setVisible(false), 500)} >\n                <Icon name='street view' />\nArtits\n</Menu.Item>\n{/* as={Link} to='/student/goals' */}\n        <Menu.Item  onClick={()=>setTimeout(() => setVisible(false), 500)} >\n                <Icon name='bolt' />\nGoals\n</Menu.Item>\n{/* as={Link} to='/student/requests' */}\n        {/* <Menu.Item  onClick={()=>setTimeout(() => setVisible(false), 500)} >\n                <Icon name='question' />\nRequests\n</Menu.Item> */}\n        {/* <Menu.Item as={Link} to='/student/coaches' onClick={()=>setTimeout(() => setVisible(false), 500)} >\n                <Icon name='address card' />\nCoaches\n</Menu.Item> */}\n        {/* <Menu.Item as={Link} to='/student/colleges'onClick={()=>setTimeout(() => setVisible(false), 500)} >\n                <Icon name='paper plane' />\nColleges\n</Menu.Item>\n<Menu.Item onClick={()=>setTimeout(() => setVisible(false), 500)} >\n                <Icon name='paper plane' />\nMilestones\n</Menu.Item> */}\n</Sidebar>\n}\nexport default SideBar;","// import \"./Map.css\";\nimport React from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nconst customMarker = new L.icon({\n  iconUrl: \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-icon.png\",\n  iconSize: [25, 41],\n  iconAnchor: [13, 0]\n});\n\nconst MapLeaflet = ()=> {\n \nvar state = {\n      lat: 51.505,\n      lng: -0.09,\n      zoom: 13\n};\n\n \n    const position = [state.lat, state.lng];\n    return (\n      <div id=\"map\">\n        <Map style={{ height: \"100vh\" }} center={position} zoom={13}>\n          <TileLayer\n            detectRetina={true}\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n          <Marker position={position} icon={customMarker}>\n            <Popup>\n              A pretty CSS3 popup.\n              <br />\n              Easily customizable.\n            </Popup>\n          </Marker>\n        </Map>\n      </div>\n    );\n  \n}\nexport default  MapLeaflet;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    marginTop: \"10px\",\n  },\n  formControl: {\n    margin: theme.spacing(0),\n    minWidth: 120,\n  },\n}));\n\nconst ChooseQuestion = ({availableQuestions,chosen, setter}) => {\n  const classes = useStyles();\n  const [age, setAge] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n  console.log(\"here\")\n  console.log(availableQuestions);\n\n  const handleChange = (event) => {\n    setter(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Question</InputLabel>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={chosen}\n          onChange={handleChange}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {availableQuestions.map(id=>{\n                  return(<MenuItem value={id}>{id}</MenuItem>)\n          })}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\nexport default ChooseQuestion","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nconst ImageUpload = ({setter})=> {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <input\n        accept=\"image/*\"\n        className={classes.input}\n        id=\"contained-button-file\"\n        multiple\n        type=\"file\"\n        onChange={(e) => {\n                console.log(e.target.files[0])\n                setter(e.target.files[0])\n              }}\n      />\n      <label htmlFor=\"contained-button-file\">\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\n          Upload\n        </Button>\n      </label>\n      {/* <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" /> */}\n      {/* <label htmlFor=\"icon-button-file\">\n        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n          <PhotoCamera />\n        </IconButton>\n      </label> */}\n    </div>\n  );\n}\nexport default ImageUpload;","import React, { useState, useContext, createRef, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom'\n// import { Header, Checkbox, Container, Segment, Sticky, Grid, Input, Transition, Divider, Loader } from 'semantic-ui-react';\n// import { Button, Form, Icon, Message, Progress, Image } from 'semantic-ui-react';\nimport {Divider} from 'semantic-ui-react'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n// import {Redirect} from 'react-router-dom'\nimport { useParams } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport axios from 'axios'\nimport storage from '../firebase/firebase'\nimport ChooseQuestion from './SignUpComponents./ChooseQuestion';\nimport ImageUpload from './SignUpComponents./ImageUpload'\nvar querystring = require('querystring');\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nconst Signup = () => {\n  const classes = useStyles();\n  //   const someContext = useContext(AppState);\n  const { id, access_token, refresh_token } = useParams();\n  const [error, setError] = useState(false);\n  const [pass, setPass] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [redirect, setRedirect] = useState(false)\n  const [image1, setImage1] = useState(\"\")\n  const [image2, setImage2] = useState(\"\")\n  const [image3, setImage3] = useState(\"\")\n  const [fileImage1, setFileImage] = useState(\"\")\n  const [fileImage2, setFileImage2] = useState(\"\")\n  const [fileImage3, setFileImage3] = useState(\"\")\n  const [phone, setPhone] = useState(\"\");\n  const [location, setLocation] = useState(null);\n  const [redirectableLogin, setRedirectableLogin] = useState(\"\");\n  const [fname, setFName] = useState(\"\");\n  const [lname, setLName] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const allquestions = [\"What's the last song that was stuck in your head?\",\n    \"Who's music taste has been most influential in your life?\",\n    \"Who's the first person you send new music to?\",\n    \"What do you miss most about being at a concert?\",\n    \"What does music mean to you?\",\n    \"What's a genre of music you haven't explored enough but want to revisit?\",\n    \"An artist you’d like to meet?\",\n    \"Your favorite throwback jams?\"\n  ]\n  const [questions, setQuestions] = useState(allquestions);\nconsole.log(questions);\n  const [ans1, setAns1] = useState(\"\");\n  const [ans2, setAns2] = useState(\"\");\n  const [ans3, setAns3] = useState(\"\");\n  const [ques1, setQues1] = useState(\"\");\n  const [ques2, setQues2] = useState(\"\");\n  const [ques3, setQues3] = useState(\"\");\n  function Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          HeartBeat\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\n\n\n\n  const contextRef = createRef();\n\n  useEffect(() => {\n    CheckPass();\n    if (redirect && location !== null) {\n      var backendroute = process.env.NODE_ENV === 'production' ? `https://pure-harbor-26317.herokuapp.com/users/signup/${id}?` : `http://localhost:8888/users/signup/${id}?`;\n      \n      const uploadCute = storage.ref(`users/${id}/cute`).put(fileImage1);\n      uploadCute.on(\n        \"state_changed\",\n        snapshot => {\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          // setProgress(progress);\n        },\n        error => {\n          console.log(error);\n        },\n        () => {\n          storage\n            .ref(\"users\")\n            .child(id)\n            .child('cute')\n            .getDownloadURL()\n            .then(url => {\n              setImage1(url);\n            });\n        }\n      );\n      // const uploadFlirt = storage.ref(`users/${id}/flirt`).put(fileImage2);\n      // uploadFlirt.on(\n      //   \"state_changed\",\n      //   snapshot => {\n      //     const progress = Math.round(\n      //       (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n      //     );\n      //     // setProgress(progress);\n      //   },\n      //   error => {\n      //     console.log(error);\n      //   },\n      //   () => {\n      //     storage\n      //       .ref(\"users\")\n      //       .child(id)\n      //       .child('flirt')\n      //       .getDownloadURL()\n      //       .then(url => {\n      //         setImage2(url);\n      //       });\n      //   }\n      // );\n      // const uploadCandid = storage.ref(`users/${id}/candid`).put(fileImage3);\n      // uploadCandid.on(\n      //   \"state_changed\",\n      //   snapshot => {\n      //     const progress = Math.round(\n      //       (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n      //     );\n      //     // setProgress(progress);\n      //   },\n      //   error => {\n      //     console.log(error);\n      //   },\n      //   () => {\n      //     storage\n      //       .ref(\"users\")\n      //       .child(id)\n      //       .child('candid')\n      //       .getDownloadURL()\n      //       .then(url => {\n      //         setImage3(url);\n      //       });\n      //   }\n      // );\n\nconsole.log(allquestions.indexOf(ques1));\nvar q1ind = allquestions.indexOf(ques1).toString();\nvar q2ind = allquestions.indexOf(ques2).toString();\nvar q3ind = allquestions.indexOf(ques3).toString();\n        console.log(q1ind);\n      axios.post(backendroute + querystring.stringify({\n        gender: gender,\n        phone: phone,\n        location: location,\n        fname: fname,\n        lname: lname,\n        bio: bio,\n        q1: q1ind,\n        q2: q2ind,\n        q3: q3ind,\n        ans1: ans1,\n        ans2: ans2,\n        ans3: ans3\n        // datingimages: [image1, image2, image3],\n      }))\n        .then(response => {\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      // window.location.assign(redirectableLogin);\n    }\n    console.log(redirect)\n    console.log(location)\n    console.log(location !== null)\n  }, [redirect, location]);\n  useEffect(() => {\n    var backendroute_image = process.env.NODE_ENV === 'production' ? `https://pure-harbor-26317.herokuapp.com/users/signup/${id}/2?` : `http://localhost:8888/users/signup/${id}/2?`;\n\n    if (image1 ) {\n      axios.post(backendroute_image + querystring.stringify({\n        datingimages: [image1],\n      }))\n        .then(response => {\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      window.location.assign(redirectableLogin);\n    }\n\n  }, [image1, image2, image3]);\n  useEffect(() => {\n    //toadd\n  }, [ques1, ques2, ques3]);\n\n\n  function CheckLocation() {\n    navigator.geolocation.getCurrentPosition((position) => {\n      setLocation([position.coords.latitude, position.coords.longitude]);\n    })\n\n  }\n  function CheckPass() {\n    if (fileImage1) {\n      // gender != \"\"\n      // type !=\"\"\n      // && !isNaN(Number(phone)\n      var temp = process.env.NODE_ENV === 'production' ? `https://pure-harbor-26317.herokuapp.com/dating/home/${id}/${access_token}/${refresh_token}` : `http://localhost:3000/dating/home/${id}/${access_token}/${refresh_token}`;\n      console.log(typeof fileImage1);\n    \n      setRedirectableLogin(temp);\n      setRedirect(true);\n    }\n    else {\n      setError(true);\n    }\n\n  };\n\n  useEffect(()=>\n  console.log(image1), [image1])\n\n  return (\n    <div ref={contextRef}>\n <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                value={fname}\n                onChange = {(event) => {\n                  setFName(event.target.value)\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                onChange = {(event) => {\n                  setLName(event.target.value)\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Bio\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange = {(event) => {\n                  setBio(event.target.value)\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} >\n            <ChooseQuestion availableQuestions={questions} chosen={ques1} setter={setQues1} />\n            </Grid>\n            <Grid item xs={12} >\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"ques1\"\n                label=\"Question 1 Answer\"\n                id=\"ques1\"\n                // autoComplete=\"current-password\"\n                onChange = {(event, newVal) => {\n                  setAns1(event.target.value)\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} >\n\n            <ChooseQuestion availableQuestions={questions} chosen={ques2} setter={setQues2} />\n            </Grid>\n            <Grid item xs={12} >\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"ques2\"\n                label=\"Question 2 Answer\"\n                id=\"ques2\"\n                // autoComplete=\"current-password\"\n                onChange = {(event, newVal) => {\n                  setAns2(event.target.value)\n                }}\n              />\n            </Grid>\n            <Grid marginTop=\"0px\" item xs={12}>\n            <ChooseQuestion availableQuestions={questions} chosen={ques3} setter={setQues3} />\n            </Grid>\n            <Grid item xs={12} >\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"ques3\"\n                label=\"Question 3 Answer\"\n                id=\"ques3\"\n                // autoComplete=\"current-password\"\n                onChange = {(event, newVal) => {\n                  setAns3(event.target.value)\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} >\n              <ImageUpload setter={setFileImage} />\n            </Grid>\n            {/* <Divider />\n            <Grid item xs={12} >\n              <ImageUpload setter={setFileImage2} />\n            </Grid>\n            <Divider />\n            <Grid item xs={12}>\n              <ImageUpload setter={setFileImage3} />\n            </Grid> */}\n          </Grid>\n          <Button\n            // type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={() => CheckLocation()}\n          >\n            Sign Up\n          </Button>\n        </form>\n        </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n    </div>\n  );\n};\n\nexport default Signup;\n\n// dating questions\n{/* <Form.Field>\n                    Looking for a relationship ?\n                  </Form.Field>\n                <Form.Field>\n                 <Checkbox\n                    radio\n                    label='Males'\n                    checked={type==\"Male\"}\n                    onChange={()=>setType(\"Male\")}\n                 />\n                 </Form.Field>\n                 <Form.Field>\n                 <Checkbox\n                    radio\n                    label='Females'\n                    checked={type==\"Female\"}\n                    onChange={()=>setType(\"Female\")}\n                 />\n                 </Form.Field>\n                 <Form.Field>\n                 <Checkbox\n                    radio\n                    label='Both'\n                    checked={type==\"Both\"}\n                    onChange={()=>setType(\"Both\")}\n                 />\n                 </Form.Field> */}\n\n                //  privacy policy\n                //  <Message>\n                // Your privacy is important to us<a href='/privacy' target=\"_blank\"> Privacy policy</a>\n                // </Message> \n\n\n                {/* <Grid textAlign='center' style={{ height: '10vh' }} padded>\n        <Divider hidden />\n        <Grid.Row>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h5\">\n              Nearify does not share your data/information with any 3rd party.\n              </Header>\n            <Form size='large' warning={error}>\n              <Segment stacked>\n                <Form.Input\n                  required={true}\n                  onChange={(e) => { setFName(e.target.value) }}\n                  id='form-subcomponent-shorthand-input-first-name'\n                  placeholder='First Name'\n                />\n                <Form.Input\n                  required={true}\n                  onChange={(e) => { setLName(e.target.value) }}\n                  id='form-subcomponent-shorthand-input-first-name'\n                  placeholder='Last Name'\n                />\n                <Form.Input\n                  required={true}\n                  onChange={(e) => { setPhone(e.target.value) }}\n                  id='form-subcomponent-shorthand-input-first-name'\n                  placeholder='US Phone number'\n                />\n                <Form.Input\n                  required={true}\n                  onChange={(e) => { setBio(e.target.value) }}\n                  id='form-subcomponent-shorthand-input-first-name'\n                  placeholder='Bio'\n                />\n                <ChooseQuestion availableQuestions={questions} setter={setQues1} />\n                <Form.Input\n                  required={true}\n                  onChange={(e) => { setAns1(e.target.value) }}\n                  id='form-subcomponent-shorthand-input-first-name'\n                  placeholder='Answer'\n                />\n                <ChooseQuestion availableQuestions={questions} setter={setQues2} />\n                <Form.Input\n                  required={true}\n                  onChange={(e) => { setAns2(e.target.value) }}\n                  id='form-subcomponent-shorthand-input-first-name'\n                  placeholder='Answer'\n                />\n                <ChooseQuestion availableQuestions={questions} setter={setQues3} />\n                <Form.Input\n                  required={true}\n                  onChange={(e) => { setAns3(e.target.value) }}\n                  id='form-subcomponent-shorthand-input-first-name'\n                  placeholder='Answer'\n                />\n                <Form.Input\n                  required={true}\n                  onChange={(e) => { setBio(e.target.value) }}\n                  id='form-subcomponent-shorthand-input-first-name'\n                  placeholder='Bio'\n                />\n                <Form.Field>\n                  Gender\n                  </Form.Field>\n                <Form.Field>\n                  <Checkbox\n                    radio\n                    label='Male'\n                    checked={gender == \"Male\"}\n                    onChange={() => setGender(\"Male\")}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <Checkbox\n                    radio\n                    label='Female'\n                    checked={gender == \"Female\"}\n                    onChange={() => setGender(\"Female\")}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <Checkbox\n                    radio\n                    label='Non-Binary'\n                    checked={gender == \"Non-Binary\"}\n                    onChange={() => setGender(\"Non-Binary\")}\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  Upload some pictures!\n                  </Form.Field>\n                <Form.Input fluid\n\n                  onChange={(e) => {\n                    console.log(e.target.files[0])\n                    setFileImage(e.target.files[0])\n                  }}\n                  label='Upload a cute photo:'\n                  type=\"file\"\n                />\n                <Form.Input fluid\n\n                  onChange={(e) => {\n                    console.log(e.target.files[0])\n                    setFileImage2(e.target.files[0])\n                  }}\n                  label='Upload a ;) photo:'\n                  type=\"file\"\n                />\n                <Form.Input fluid\n\n                  onChange={(e) => {\n                    console.log(e.target.files[0])\n                    setFileImage3(e.target.files[0])\n                  }}\n                  label='Upload a candid photo:'\n                  type=\"file\"\n                />\n                <Button color='teal' fluid size='large' onClick={() => CheckLocation()}>\n                  Continue\n                 </Button>\n              </Segment>\n              {error ?\n                <div style={{ maxWidth: 450 }}>\n                  <Message\n                    warning\n                    floating\n                    content=\"Make sure your phone number is a number and that you've chosen your gender and type.\"\n                    size=\"tiny\"\n                  />\n                </div> : \"\"}\n            </Form>\n            \n          </Grid.Column>\n        </Grid.Row>\n      </Grid> */}\n\n  //     const PageHeader = () => {\n  //   return (\n  //     <Segment\n  //       basic\n  //       style={{ backgroundColor: \"#006990\", textAlign: \"center\", marginBottom: \"0px\" }}\n  //       fluid=\"true\"\n  //     >\n  //       <Grid columns={2}>\n  //         <Grid.Column width='3' />\n  //         <Grid.Column width='10'>\n  //           <Header\n  //             as={Link}\n  //             to=\"/\"\n  //             inverted\n  //             content=\"Nearify\"\n  //             size=\"large\"\n  //             color=\"black\"\n  //             style={{ cursor: \"default\" }}\n  //           />\n  //         </Grid.Column>\n  //       </Grid>\n  //     </Segment>\n  //   );\n  // };\n\n\n","\nimport React, {useState, useEffect, isValidElement, useContext} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport axios from 'axios'\nimport {Divider, Grid, Image, Header, Container, Form, TextArea, Button, Rail, Segment, Feed, FeedContent, Icon, Label} from 'semantic-ui-react'\nimport {Router , useParams, Redirect} from  'react-router-dom';\nimport {dbArtists, dbPosts, dbReplies, dbLikes} from '../firebase/firebase'\nimport {InfoContext} from '../App'\nimport DateToTime from '../DateToTime'\nimport ReturnPost from './Post'\nimport ReturnHomepagePost from './ReturnHomepagePost'\nconst mongoose = require('mongoose');\nconst s = new Spotify();\n\nconst ArtistHomepage = () =>{\n     var  {artistid } = useParams();\n     const [value, setValue]=useState(\"\");\n     const {replies, setReplies, artists, setArtists, messages, setMessages, songs, setSongs, posts, setPosts, likes, setLikes, user, setUser, accesstoken, setAccesToken, refreshtoken, setRefreshtoken} = React.useContext(InfoContext);\n     if(user){\n       localStorage.setItem('user', JSON.stringify(user));\n     }\n     \n     \n     const [name, setName] = useState(\"\");\n     const [image, setImage]=useState(\"\");\n     const [image2, setImage2]=useState(\"\");\n     const [image3, setImage3]=useState(\"\");\n     const [valuee, setValuee]=useState(\"\");\n     if(artists && !artists[artistid] && name){\n      const constant = {\n        id: artistid,\n        name: name,\n        posts: \"None\",\n      }\n      const dataToPush = {\n        [artistid]: constant\n      }  \n      dbArtists.update(dataToPush);\n     }\n//      var array = [...Array(20).keys()];\n//      const [indexarray, setIndex]=useState(array);\n//      s.setAccessToken(accesstoken);\n        // console.log(context);\n\n        \n     useEffect(initializeState, []);\n     function initializeState(){\n     s.getArtist(artistid).then(\n                res => {\n                           setName(res.name);\n                           if(res.images[0].url){\n                              console.log(res.images[0].url);\n\n                                setImage(res.images[0].url);\n                           }\n                           else{\n                            setImage(\"https://images.unsplash.com/photo-1554050857-c84a8abdb5e2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=564&q=80\");\n                          }\n                           if(res.images[1].url){\n                             console.log(res.images[1].url);\n                            setImage2(res.images[1].url);\n                          }\n                          if(res.images[2].url){\n                            console.log(res.images[2].url);\n\n                            setImage3(res.images[2].url);\n                          }\n                }).catch(err=>console.log(err));\n     }\n     \n     function handleSubmit(){\n      console.log(document.getElementById(\"textarea\").value);\n      const likesref=dbLikes.push(0);\n        const likeskey=likesref.getKey();\n        console.log(\"Likes key is \", likeskey);\n        const repliesref=dbReplies.push(0);\n        const replieskey=repliesref.getKey();\n        console.log(\"Likes key is \", likeskey);\n        console.log(\"replies key is \", replieskey);\n\n      const ref = dbPosts.push({\n        'content':value,\n        'posterid': user.id,\n        'artistid': artistid,\n        'likes': likeskey,\n        'replies': replieskey,\n        \"createdAt\": {'.sv': 'timestamp'},\n        \"type\": \"artist\"\n        \n      });\n      var key=ref.key;\n      // if(artists[artistid]['posts']==\"None\"){\n        console.log(\"here\")\n        dbArtists.child(artistid).child('posts').push(key);\n\n      // }\n\n      if(!user.postsfollowing.includes(key)){  \n        var redirectUri= process.env.NODE_ENV == 'production' ? `https://pure-harbor-26317.herokuapp.com/users/addpost/` : `http://localhost:8888/users/addpost/`\n        axios.post(`${redirectUri}${user.id}/${key}`)\n        .then(response => {\n             console.log(\"updated!\", response);\n        })\n        .catch(function (error) {\n             console.log(error);\n          });\n        var temp= user;\n        console.log(temp);\n        // var array = temp.postsfollowing;\n        // array.add(id);\n        temp.postsfollowing.push(key);\n        console.log(temp);\n        setUser(temp);\n        // user.postsfollowing.push(id);\n        // setUser()\n        }\n        setValue(\"\");\n\n     }\n     if(user|| JSON.parse(localStorage.getItem('user'))){\n// \n     console.log(user);\n     console.log(JSON.parse(localStorage.getItem('user')));\n     return(\n  \n    <div className=\"HomepageArtist\">\n      <Container>\n      <br></br>\n      <Header as='h1' content={name} textAlign='center' />\n      <br></br>\n      <img class=\"ui medium centered image\" src={image} centered size='medium'></img>\n      <br></br>\n      <br></br>\n      <div>\n        <Header style={{marginTop:\"10px\"}} textAlign='center' as='h3'>Say something about this artist</Header>\n        <Form onSubmit={()=>handleSubmit()}>\n          <TextArea id=\"textarea\" value={value} onChange={(e)=>setValue(e.target.value)} rows={2} placeholder='Add a post' /> \n          <Form.Button fluid positive  style={{marginTop:\"10px\"}}>Post</Form.Button>\n          {/* onClick = {()=>handleSubmit()} */}\n        </Form>\n      </div> \n      <div>\n      <Grid>\n          <Grid.Row>\n          <Grid.Column width={3}></Grid.Column>\n          <Grid.Column width={10}>\n        {artists && artists[artistid] && artists[artistid]['posts']!=\"None\" ? \n          Object.values(artists[artistid]['posts']).map(id=>\n            <Segment raised style={{marginTop: \"40px\"}}>\n\n            <ReturnHomepagePost key={id.toString()} item={posts[id]} id={id} includeHeader={false} />\n          </Segment>\n          ) \n          : \" \"}\n          </Grid.Column>\n          <Grid.Column width={3}></Grid.Column>\n          </Grid.Row>\n          </Grid>\n          </div> \n      </Container>\n    </div> \n   \n        )\n      }\n      else{\n        return(<Redirect to=\"/\" push={true} />);\n      }\n}\n\nexport default ArtistHomepage;","\nimport React, {useState, useEffect, isValidElement, useContext} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport axios from 'axios'\nimport {Divider, Grid, Image, Header, Container, Form, TextArea, Button, Rail, Segment, Feed, FeedContent, Icon, Label} from 'semantic-ui-react'\nimport {Router , useParams} from  'react-router-dom';\nimport {dbArtists, dbPosts, dbReplies, dbLikes, dbSongs} from '../firebase/firebase'\nimport {InfoContext} from '../App'\nimport ReturnPost from './Post'\nimport ReturnReply from './Reply'\nimport DateToTime from '../DateToTime'\nimport ReturnHomepagePost from './ReturnHomepagePost'\nconst mongoose = require('mongoose');\nconst s = new Spotify();\n\nconst TrackPage = () =>{\n     var  {trackid } = useParams();\n     const [value, setValue]=useState(\"\");\n     const {replies, setReplies, artists, setArtists, messages, setMessages, songs, setSongs, posts, setPosts, likes, setLikes, user, setUser, accesstoken, setAccesToken, refreshtoken, setRefreshtoken} = React.useContext(InfoContext);\n     localStorage.setItem('user', JSON.stringify(user));\n     const [name, setName] = useState(\"\");\n     const[artistName, setArtistName]=useState(\"\");\n     const [image, setImage]=useState(\"\");\n     const [image2, setImage2]=useState(\"\");\n     const [image3, setImage3]=useState(\"\");\n     const [valuee, setValuee]=useState(\"\");\n     if(songs && !songs[trackid] && name&& artistName){\n      const constant = {\n        id: trackid,\n        name: name,\n        posts: \"None\",\n        artist: artistName\n      }\n      const dataToPush = {\n        [trackid]: constant\n      }  \n      dbSongs.update(dataToPush);\n     }\n//      var array = [...Array(20).keys()];\n//      const [indexarray, setIndex]=useState(array);\n//      s.setAccessToken(accesstoken);\n        // console.log(context);\n     useEffect(initializeState, []);\n     function initializeState(){\n     s.getTrack(trackid).then(\n                res => {\n                  console.log(res);\n                           setName(res.name);\n                           setArtistName(res.artists[0].name)\n                           if(res.album.images[0].url){\n                              console.log(\"THE IMAGE\",res.album.images[0].url);\n\n                                setImage(res.album.images[0].url);\n                           }\n                           else{\n                            setImage(\"https://images.unsplash.com/photo-1554050857-c84a8abdb5e2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=564&q=80\");\n                          }\n                          //  if(res.images[1].url){\n                          //    console.log(res.images[1].url);\n                          //   setImage2(res.images[1].url);\n                          // }\n                          // if(res.images[2].url){\n                          //   console.log(res.images[2].url);\n\n                          //   setImage3(res.images[2].url);\n                          // }\n\n                           \n                       \n                }).catch(err=>console.log(err));\n     }\n    \n     \n     function handleSubmit(){\n      console.log(document.getElementById(\"textarea\").value);\n        const likesref=dbLikes.push(0);\n        const likeskey=likesref.getKey();\n        console.log(\"Likes key is \", likeskey);\n        const repliesref=dbReplies.push(0);\n        const replieskey=repliesref.getKey();\n        console.log(\"Likes key is \", likeskey);\n        console.log(\"replies key is \", replieskey);\n\n      const ref = dbPosts.push({\n        'content':valuee,\n        'posterid': user.id,\n        'trackid': trackid,\n        'likes': likeskey,\n        'replies': replieskey,\n        \"createdAt\": {'.sv': 'timestamp'},\n        \n      });\n      var key=ref.key;\n      // if(artists[artistid]['posts']==\"None\"){\n        console.log(\"here\")\n        dbSongs.child(trackid).child('posts').push(key);\n      // }\n      var redirectUri= process.env.NODE_ENV == 'production' ? `https://pure-harbor-26317.herokuapp.com/users/addpost/` : `http://localhost:8888/users/addpost/`\n      axios.post(`${redirectUri}${user.id}/${key}`)\n      .then(response => {\n          console.log(\"updated!\", response);\n          })\n      .catch(function (error) {\n        console.log(error);\n      });\n      var temp= user;\n      console.log(temp);\n                // var array = temp.postsfollowing;\n                // array.add(id);\n      temp.postsfollowing.push(key);\n      console.log(temp);\n      setUser(temp);\n\n      setValuee(\"\");\n     }\n     \n     return(\n  \n    <div className=\"HomepageTrack\">\n      <Container>\n      <Header as='h1' content={name} textAlign='center' dividing />\n      <Image src={image} centered size='medium'></Image>\n      <br></br>\n      <br></br>\n      <div>\n        <Header style={{marginTop:\"10px\"}} textAlign='center' as='h3'>Say something about this song</Header>\n        <Form onSubmit={()=>handleSubmit()}>\n          <TextArea id=\"textarea\" value={valuee} onChange={(e)=>setValuee(e.target.value)} rows={2} placeholder='Add a post' /> \n          <Form.Button fluid positive  style={{marginTop:\"10px\"}}>Post</Form.Button>\n          {/* onClick = {()=>handleSubmit()} */}\n        </Form>\n      </div> \n      <div>\n      <Grid>\n          <Grid.Row>\n          <Grid.Column width={3}></Grid.Column>\n          <Grid.Column width={10}>\n        {songs && songs[trackid] && songs[trackid]['posts']!=\"None\" ? \n         Object.values(songs[trackid]['posts']).map(id=>\n          <Segment raised style={{marginTop: \"40px\"}}>\n              <ReturnHomepagePost key={id.toString()} item={posts[id]} id={id} includeHeader={false} />\n        </Segment>\n        ) \n        : \" \"}\n          </Grid.Column>\n          <Grid.Column width={3}></Grid.Column>\n          </Grid.Row>\n          </Grid>\n          </div> \n      </Container>\n    </div> \n   \n        )\n}\n\nexport default TrackPage;","import storage from '../firebase/firebase'\nimport React, { useState, useContext, createRef, useEffect } from 'react';\nimport { Header, Checkbox, Card, Container, Segment, Sticky, Grid, Input, GridRow, Divider, GridColumn } from 'semantic-ui-react';\nimport { Button, Form, Icon, Image, List, Label, Transition, Modal, Dropdown} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { Loader, Dimmer } from 'semantic-ui-react';\nimport { dbStudents } from '../firebase/firebase';\nimport axios from 'axios'\nimport {InfoContext} from '../App'\n\n\nconst SettingsPage = () => {\n        const {replies, setReplies, artists, setArtists, messages, setMessages, songs, setSongs, posts, setPosts, likes, setLikes, user, setUser, accesstoken, setAccesToken, refreshtoken, setRefreshToken} = React.useContext(InfoContext);\n\n        return(\n                <div>\n                        <Container>\n                                <Grid centered>\n                                        <Grid.Row>\n                                             <Header as={'h2'}> Helloooo, {user.name}. What's up?</Header>   \n                                        </Grid.Row>\n                                        <Grid.Row>\n                                                <Header as={'h3'}>So here's the information we have about you: No stalking we promise, haha.</Header>\n                                        </Grid.Row>\n                                        <Grid.Row>\n                                                <Header as={'h4'}>Email: {user.email}</Header>\n                                                <Grid.Row>\n                                                <Header as={'h4'}>(FYI we also know your top artists/songs but that's just so that we can give you content that's relevant for you lol.) {user.email}</Header>\n                                                </Grid.Row>\n                                        </Grid.Row>\n                                        <Grid.Row>\n                                                {user.image===\"https://pngimg.com/uploads/music_notes/music_notes_PNG84.png\" ? \n                                                <Header>We don't have a picture for your account, but soon we'll allow you to upload one!</Header> : \n                                                <div>\n                                                <Header>Here's a beautiful picture of you too :O </Header> \n                                                <Image circular src={user.image} size=\"large\" />\n                                                </div>\n                                        }\n                                        </Grid.Row>\n\n                                </Grid>\n                        </Container>\n                </div>\n        );\n        \n}\nexport default SettingsPage;","import React, { useState, useEffect, isValidElement } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { Grid, Image, Header, Search, Button, Container } from 'semantic-ui-react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { InfoContext } from '../../App';\nconst s = new Spotify();\nconst NoneInCommon = ({ person, type }) => {\n        // console.log(type);\n        // console.log(person);\n        var array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n        const { accesstoken, user } = React.useContext(InfoContext);\n\n        const [names, setNames] = useState([]);\n        const [images, setImages] = useState([]);\n        var temp = [];\n        var temp2 = [];\n        var temp3 = [];\n        s.setAccessToken(accesstoken);\n        useEffect(initializeState, [person]);\n        function initializeState(){\n                        for (let i = 0; i < person[type].length; i++) {\n                                // console.log(type);\n                                // console.log(person[type]);\n                                if(type=='favoriteartists'){\n                                        s.getArtist(person[type][i]).then(\n                                                res => {\n                                                        //      console.log(artists[i]);\n                                                        temp.push(res.name);\n                                                        // console.log(res.name)\n                                                        temp2.push(res.images[0].url);\n                                                        temp3.push(user['favoriteartists'][i]);\n                                                        //      console.log(temp);\n                                                        //      console.log(res);\n                                                        //      console.log(temp);\n                                                        // if (temp.length == 20) {\n                                                        //      console.log(temp);\n                                                        setNames(temp);\n                                                        setImages(temp2);\n                                                        // setOrdererdArtists(temp3);\n                                                        // }\n                        \n                                                }).catch(err => console.log(err));\n                                }\n                                else\n                                {\n                                        // console.log(\"In here\")\n                                        s.getTrack(person[type][i]).then(\n                                                res => {\n                                                        //      console.log(artists[i]);\n                                                        temp.push(res.name);\n                                                        temp2.push(res.album.images[0].url);\n                                                        // temp3.push(user['favoriteartists'][i]);\n                                                        //      console.log(temp);\n                                                        //      console.log(res);\n                                                        //      console.log(temp);\n                                                        if (temp.length == person[type].length) {\n                                                        //      console.log(temp);\n                                                                setNames(temp);\n                                                                setImages(temp2);\n                                                                // console.log(temp);\n                                                        // setOrdererdArtists(temp3);\n                                                        }\n                        \n                                                }).catch(err => console.log(err));\n                                }\n                                \n                        }\n        } \n        const ReturnPreview=({id})=>{\n\n                var name = names[id];\n                var image = images[id];\n                // console.log(indexarray);\n                // console.log(artistimages)\n                if (image) {\n                        //      console.log(imageurl);\n                        return (\n                               \n                                        <div style={{marginTop:\"-25px\"}} key={id.toString()} id={id}>\n                                                <Image  style={{marginTop:\"5px\"}} size='small' rounded verticalAlign='middle' src={image} />\n                                                <Header style={{marginTop:\"5px\"}} size='small'>{name}</Header>\n                                               \n                                        <br></br>\n                                        </div>\n                               \n                                );\n                }\n                else {\n                        // console.log(imageurl)\n                        return null;\n                }\n        }\n        \n        return (\n                <div>\n                        <Header>{person['name']} doesn't have any in common, but they can talk to you about their favorites including:</Header>\n                        <br></br>\n                        {names.map((item,index)=>\n                                <ReturnPreview id={index}/>\n                        )}\n                </div>\n        )\n}\nexport default NoneInCommon","\nimport React, { useState, useEffect, isValidElement } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { Grid, Image, Header,Divider, Search, Button, Container } from 'semantic-ui-react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { InfoContext } from '../../App';\nimport axios from 'axios'\nimport NoneInCommon from './NoneInCommon'\nconst mongoose = require('mongoose');\nconst s = new Spotify();\n\nconst OverLapArtists = ({person}) => {\n        const { accesstoken, user } = React.useContext(InfoContext);\n        const [artistnames, setNames] = useState([]);\n        const [artistimages, setImages] = useState([]);\n        const [orderedArtists, setOrdererdArtists] = useState([]);\n\n        var array = [...Array(20).keys()];\n        const [indexarray, setIndex] = useState(array);\n\n        s.setAccessToken(accesstoken);\n        useEffect(initializeState, [user]);\n        var temp = [];\n        var temp2 = [];\n        var temp3 = [];\n        function initializeState() {\n                //     console.log(artists);\n                if(user)\n                for (let i = 0; i < user['favoriteartists'].length; i++) {\n                        if(person && person['favoriteartists'].includes(user['favoriteartists'][i])){\n                                s.getArtist(user['favoriteartists'][i]).then(\n                                        res => {\n                                                //      console.log(artists[i]);\n                                                temp.push(res.name);\n                                                // console.log(res.name)\n                                                temp2.push(res.images[0].url);\n                                                temp3.push(user['favoriteartists'][i]);\n                                                //      console.log(temp);\n                                                //      console.log(res);\n                                                //      console.log(temp);\n                                                // if (temp.length == 20) {\n                                                        //      console.log(temp);\n                                                        setNames(temp);\n                                                        setImages(temp2);\n                                                        setOrdererdArtists(temp3);\n                                                // }\n        \n                                        }).catch(err => console.log(err));\n                                }\n                       \n                }\n                //      console.log(temp);\n                //      console.log(temp2);\n                //      setNames(temp);\n                //      setImages(temp2);\n\n\n        }\n\n        const ReturnFavArtist = ({ id }) => {\n                var artistname = artistnames[id];\n                var imageurl = artistimages[id];\n                // console.log(indexarray);\n                // console.log(artistimages)\n                if (imageurl) {\n                        //      console.log(imageurl);\n                        return (\n                                <div style={{marginTop:\"-25px\"}} key={id.toString()} id={id}>\n                                        {/* mobile={16} tablet={8} computer={8} */}\n                                        {/* <Link to={`/artist/${orderedArtists[id]}`} > */}\n                                                <Image  style={{marginTop:\"5px\"}}  size='small' rounded src={imageurl} verticalAlign='middle' />\n                                                <Header style={{marginTop:\"5px\"}} size='small'>{artistname}</Header>\n                                        <br></br>\n                                </div>);\n                }\n                else {\n                        return null;\n                }\n        }\n        \n\n        return (\n                <div className=\"FavoriteArtists \">\n                        <Header size='huge'>Artist Matches</Header>\n                       <Divider hidden/>\n                                {artistimages.length > 0 ? indexarray.map(id => <ReturnFavArtist key={id.toString()} id={id} />) : <NoneInCommon person = {person} type=\"favoriteartists\"/>}\n                        \n                </div>\n        )\n}\n\n\n\nexport default OverLapArtists;","\nimport React, { useState, useEffect, isValidElement, useContext } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { Grid, Image, Header, Search, Button, Container } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { InfoContext } from '../../App';\nimport NoneInCommon from './NoneInCommon';\n\n\nconst mongoose = require('mongoose');\nconst s = new Spotify();\nconst OverLapSongs = ({person}) => {\n        const { accesstoken, user } = useContext(InfoContext);\n        const [songnames, setNames] = useState([]);\n        const [songimages, setImages] = useState([]);\n        const [orderedSongs, setOrderedSongs] = useState([]);\n        var array = [...Array(20).keys()];\n        const [indexarray, setIndex] = useState(array);\n\n        s.setAccessToken(accesstoken);\n        useEffect(initializeState, [user]);\n        var temp = [];\n        var temp2 = [];\n        var temp3 = [];\n        function initializeState() {\n                console.log(user);\n                if (user) {\n\n\n                        for (let i = 0; i < user['favoritesongs'].length; i++) {\n                                //     console.log(\"This is songs\",songs)\n                                if(person['favoritesongs'].includes(user['favoritesongs'][i])){\n                                        s.getTrack(user['favoritesongs'][i]).then(\n                                                res => {\n                                                        temp.push(res.name);\n                                                        temp2.push(res.album.images[0].url);\n                                                        temp3.push(user['favoritesongs'][i]);\n                                                        //      console.log(\"Inside then\")\n                                                        //      console.log(res);\n                                                        //      console.log(temp);\n                                                        // if (temp.length == 20) {\n                                                                setNames(temp);\n                                                                setImages(temp2);\n                                                                setOrderedSongs(temp3);\n                                                        // }\n        \n                                                }).catch(err => console.log(err));\n                                }\n                        }\n                }\n        }\n\n        const ReturnFavSong = ({ id }) => {\n                var songName = songnames[id];\n                var imageurl = songimages[id];\n                // console.log(indexarray);\n                // console.log(artistimages)\n                if (imageurl) {\n                        //      console.log(imageurl);\n                       \n                                // <Grid.Column key={id.toString()} mobile={16} tablet={8} computer={8} id={id}>\n                                        {/* <Link to={`/track/${orderedSongs[id]}`} > */}\n                                      \n\n                                                {/* <Image size='small' rounded verticalAlign='middle' src={imageurl} />\n                                                <Header style={{marginTop:\"5px\"}} size='small'>{songName}</Header> */}\n                                                \n                                        {/* </Link> */}\n\n                                      \n                                // </Grid.Column>\n                                return(<div style={{marginTop:\"-25px\"}} key={id.toString()} id={id}>\n                                {/* mobile={16} tablet={8} computer={8} */}\n                                {/* <Link to={`/artist/${orderedArtists[id]}`} > */}\n                                        <Image  style={{marginTop:\"5px\"}}  size='small' rounded src={imageurl} verticalAlign='middle' />\n                                        <Header style={{marginTop:\"5px\"}} size='small'>{songName}</Header>\n                                <br></br>\n                        </div>\n\n                                );\n                               \n                                \n                }\n                else {\n                        // console.log(imageurl)\n                        return \"null\";\n                }\n        }\n        \n        return (\n                <div className=\"OverlappingSongs \">\n                        <Header size='huge'>Song Matches</Header>\n                        <Grid.Row >\n                                {songimages.length > 0 ? indexarray.map(id => <ReturnFavSong key={id.toString()} id={id} />) : <NoneInCommon type={\"favoritesongs\"} person={person} /> }\n                        </Grid.Row>\n                </div>\n\n        )\n}\n\nexport default OverLapSongs;","import axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Container, Card, Button, Segment, Header, Search, Image, Icon, Grid, Label, Divider } from 'semantic-ui-react'\nimport { InfoContext } from '../../App'\nimport { dbUsers, dbChats, } from '../../firebase/firebase'\n\n\nconst ReturnPreview = ({ increaseIndex, person }) => {\n        const [number, setNumber] = useState(0);\n        const [change, setChange] = useState(true);\n        const { user, users } = useContext(InfoContext)\n        function updateLike() {\n                dbUsers.child(user.id).child('seen').push(person['id']);\n                if (Object.values(users[person['id']]['interested']).includes(user.id)) {\n                        dbUsers.child(user.id).child('matched').push(person['id']);\n                        var key = dbChats.push({ person1: user.id, person2: person.id });\n                        const k = key.getKey();\n                        dbUsers.child(user.id).child('chats').push(k);\n                        dbUsers.child(person.id).child('chats').push(k);\n                }\n                else {\n                        dbUsers.child(user.id).child('interested').push(person['id']);\n                }\n                increaseIndex();\n                console.log(\"IN SIDE\")\n        }\n        // useEffect(() => {\n        //         setNumber((number + 1) % 3)\n        //         setTimeout(() => {\n        //                 setChange(!change);\n        //                 // console.log(change);\n        //         }, 2000)\n        // }, [change])\n        const allquestions = [\"What's the last song that was stuck in your head?\",\n                \"Who's music taste has been most influential in your life?\",\n                \"Who's the first person you send new music to?\",\n                \"What do you miss most about being at a concert?\",\n                \"What does music mean to you?\",\n                \"What's a genre of music you haven't explored enough but want to revisit?\",\n                \"An artist you’d like to meet?\",\n                \"Your favorite throwback jams?\"\n        ]\n        return (\n                <Segment raised>\n                        <Header size='huge' textAlign='center' >{person['name']}</Header>\n                        <Header size='medium' style={{ marginTop: \"5px\" }} textAlign='center' >Want to know {person['name']} better? </Header>\n\n                        <Button.Group style={{ marginBottom: \"5px\" }} fluid>\n                                <Button onClick={() => {\n                                        increaseIndex()\n                                        dbUsers.child(user.id).child('seen').push(person['id']);\n                                }} >No</Button>\n                                <Button.Or />\n                                <Button positive onClick={updateLike}>Yes</Button>\n                        </Button.Group>\n                        <Grid fluid colums={3}>\n                                <Grid.Row>\n                                        <Grid.Column width={2}>\n\n                                        </Grid.Column>\n                                        <Grid.Column width={4}>\n                                                <Image rounded centered src={person['datingimages'][number]} fluid />\n                                        </Grid.Column>\n                                        <Grid.Column width={4}>\n                                                <Image rounded centered src={person['datingimages'][number]} fluid />\n\n                                        </Grid.Column>\n                                        <Grid.Column width={4}>\n                                                <Image rounded centered src={person['datingimages'][number]} fluid />\n\n                                        </Grid.Column>\n                                        <Grid.Column width={2}>\n\n                                        </Grid.Column>\n                                </Grid.Row>\n                                <Grid.Row>\n                                        <Grid.Column>\n                                                <Header textAlign='center' as='h1' >{person['bio']}</Header>\n                                        </Grid.Column>\n                                </Grid.Row>\n                                <Grid.Row style={{marginTop:\"-10px\"}}>\n                                        <Grid.Column width={2}>\n\n                                        </Grid.Column>\n                                        <Grid.Column width={4}>\n                                                <Grid.Row>\n\n\n                                                        <Segment fluid raised>\n\n\n                                                                <Header as='h3'>\n                                                                        {allquestions[person['q1']]}\n                                                                </Header>\n                                                        </Segment>\n                                                </Grid.Row>\n                                                \n\n                                        </Grid.Column>\n                                        <Grid.Column width={4}>\n                                                <Grid.Row>\n                                                        <Segment compact raised>\n\n\n                                                                <Header as='h3'>\n                                                                        {allquestions[person['q2']]}\n                                                                </Header>\n                                                        </Segment>\n                                                </Grid.Row>\n                                                \n                                        </Grid.Column>\n                                        <Grid.Column width={4}>\n                                                <Grid.Row>\n                                                        <Segment compact raised>\n\n\n                                                                <Header as='h3'>\n                                                                        {allquestions[person['q3']]}\n                                                                </Header>\n                                                        </Segment>\n                                                </Grid.Row>\n                                               \n                                        </Grid.Column>\n                                        <Grid.Column width={2}>\n\n                                        </Grid.Column>\n\n                                </Grid.Row>\n\n                                <Grid.Row style={{marginTop:\"-20px\"}}>\n                                        <Grid.Column width={2} />\n                                        <Grid.Column width={4}>\n                                                <Segment textAlign='center' centered  raised>\n\n                                                        <Header as='h2'>\n                                                                {person['ans1']}\n                                                        </Header>\n                                                </Segment>\n                                        </Grid.Column>\n                                        <Grid.Column width={4}>\n                                                <Segment centered raised>\n\n                                                        <Header as='h2'>\n                                                                {person['ans2']}\n                                                        </Header>\n                                                </Segment>\n                                        </Grid.Column>\n                                        <Grid.Column width={4}>\n                                                <Segment centered raised>\n\n                                                        <Header as='h2'>\n                                                                {person['ans3']}\n                                                        </Header>\n                                                </Segment>\n                                        </Grid.Column>\n                                        <Grid.Column width={2} />\n                                </Grid.Row>\n\n                        </Grid>\n\n                </Segment>\n                // <div>\n                //         <Card fluid>\n                //                 {/* wrapped ui={false}  */}\n                //                 <Card.Content>\n                //                         <Card.Header size='massive' >{person['name']}</Card.Header>\n\n                //                         <Card.Description>\n                //                                 {/* <Header>Favorite Songs</Header> */}\n                //                                 {/* <SongsPreview person={person} /> */}\n\n                //                                 {/* {person['favoritesongs'].map(id=>getSong(id))} */}\n                //                         </Card.Description>\n                //                 </Card.Content>\n                //                 <Image rounded centered src={person['datingimages'][number]} fluid size='huge' />\n\n                //                 {/* <Card.Content extra>\n                //                         <a>\n                //                                 <Icon name='user' />\n                //                                         22 Friends\n                //                                  </a>\n                //                 </Card.Content> */}\n                //         </Card>\n                // </div>\n        );\n\n}\nexport default ReturnPreview","import axios from 'axios'\nimport { Redirect } from 'react-router-dom'\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Container, Search, Grid } from 'semantic-ui-react'\nimport { Router, useParams, Link } from 'react-router-dom';\nimport Spotify from 'spotify-web-api-js';\nimport OverLapArtists from './PreviewComponents/OverLapArtists'\nimport OverLapSongs from './PreviewComponents/OverLapSongs'\n// import HomePagePosts from '../components/HomePagePosts'\nimport MatchedPeople from './matchedpeople'\nimport ReturnPreview from './PreviewComponents/ReturnPreview'\nimport { Button } from 'semantic-ui-react'\nimport { InfoContext } from '../App'\nimport { dbUsers } from '../firebase/firebase';\nimport firebase from '../firebase/firebase'\n// import firebase, { messaging } from 'firebase/app';\nimport {messaging} from '../firebase/firebase'\nimport 'firebase/database';\nimport apiKey from '../firebase/api-Key';\nimport 'firebase/storage'\nimport 'firebase/messaging'\n\nconst mongoose = require('mongoose');\nconst s = new Spotify();\n\nconst DatingHomePageFeed = () => {\n\n  \n\n  var { id, access_token, refresh_token } = useParams();\n  const { replies, setReplies, artists, setArtists, messages, setMessages, orderedAttracted, songs, setSongs, posts, setPosts, likes, setLikes, users, user, setUser, accesstoken, setAccesToken, refreshtoken, setRefreshToken } = React.useContext(InfoContext);\n\n  var redirectUri = process.env.NODE_ENV == 'production' ? `https://pure-harbor-26317.herokuapp.com/users/` : `http://localhost:8888/users/`\n  const [index, setIndex] = useState(0);\n  useEffect(initializeCheck, [user, users, orderedAttracted]);\n  function initializeCheck() {\n    if (users && !users[user.id]) {\n      const data = { id: user.id, seen: \"None\", matched: \"None\", interested: \"None\" }\n      dbUsers.child(id).update(data);\n    }\n  };\n  useEffect(handleToken, [user]);\n\n  function handleToken(){\n    console.log(\"WE AIN't GOT A USER\")\n\n    if(user){\n\n      console.log(\"WE GOT A USER\")\n      messaging.requestPermission()\n      .then(function () {\n        console.log('have permission');\n        return messaging.getToken();\n      })\n      .then(function (token) {\n        dbUsers.child(user.id).child('token').set(token)\n      })\n      .catch(function (err) {\n        console.log(err);\n      })\n  \n      messaging.onMessage(function (payload) {\n      console.log('onmessage', payload);\n    })\n    }\n    \n  }\n  useEffect(handleData, []);\n  function handleData() {\n    axios.get(`${redirectUri}${id}`)\n      .then(response => {\n        setUser(response.data[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  setAccesToken(access_token); // double check on the logic behind this. \n  setRefreshToken(refresh_token);\n  s.setAccessToken(access_token);\n  // s.setRefreshToken(refresh_token);\n\n  const [isLoading, setisLoading] = useState(false);\n  const [result, setResult] = useState(\"\");\n  const [redirectArtist, setRedirectArtist] = useState(false);\n  const [redirectTrack, setRedirectTrack] = useState(false);\n  const [timeout, setTime] = useState(false);\n\n  // const [newArtist]\n  setTimeout(() => {\n    setTime(true);\n  }, 3000);\n\n\n  return (\n    <div className=\"App\">\n      <div style={{ marginLeft: \"30px\", marginRight: \"30px\" }}>\n        <Grid padded >\n          <Grid.Row stretched>\n            <Grid.Column width={3}>\n              {user['favoritesongs'] && orderedAttracted && orderedAttracted.length > index ? <OverLapSongs person={orderedAttracted[index]} /> : \"\"}\n\n            </Grid.Column>\n\n\n            <Grid.Column width={10}>\n              {user && user['location'] && user['location'].length > 0 && orderedAttracted && orderedAttracted.length > index ? <ReturnPreview increaseIndex={() => setIndex(index + 1)} person={orderedAttracted[index]} /> :\n                user && user['location'] && user['location'].length > 0 ? \"No matches yet.\"\n                  :\n                  <Button as={Link} to={`/signup/${user['id']}/${accesstoken}/${refreshtoken}`} > Complete your dating profile signup process! </Button>}\n            </Grid.Column>\n\n\n            <Grid.Column width={3}>\n              {user['favoriteartists'] && orderedAttracted && orderedAttracted.length > index ? <OverLapArtists person={orderedAttracted[index]} /> : \"\"}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n      {redirectArtist ? <Redirect to={`/artist/${result.id}`} push={true} /> : \"\"}\n      {redirectTrack ? <Redirect to={`/track/${result.id}`} push={true} /> : \"\"}\n\n\n    </div>\n  );\n}\n\nexport default DatingHomePageFeed;\n\n","import React, {useState} from 'react';\nimport {Input, Divider} from 'semantic-ui-react'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nconst primary = green[900]; // #f44336\n\n\n//test\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://i.ibb.co/pQBpgMz/streaks-black-stripes-green-lines-3840x2160-c2-000000-32cd32-l2-113-113-a-135-f-1.jpg)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide() {\n  const [nonSpotify, setNonSpotify] = useState(false);\n\n  const classes = useStyles();\n  var redirectableLogin= process.env.NODE_ENV === 'production' ? `https://pure-harbor-26317.herokuapp.com/login/dating` : `http://localhost:8888/login/dating`;\n  var redirectableSignup = process.env.NODE_ENV === 'production' ? `https://pure-harbor-26317.herokuapp.com/nonspotify/signup` : `http://localhost:3000/nonspotify/signup`;\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      \n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper} style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '85vh'}}>\n          \n          <Avatar className={classes.dark}>\n            <LockIcon style={{ color: 'green'}} />\n          </Avatar>\n         \n    {/* {!nonSpotify ?  */}\n    {/* <div>  */}\n            <a href= {redirectableLogin }>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Log in Spotify\n            </Button>\n             </a>\n\n            \n            {/* <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={()=>setNonSpotify(true)}\n            >\n              Other Login\n            </Button>\n            </div>  */}\n            {/* // :\n            \n            // <div>\n            //                  <Divider  hidden />\n\n            //    <Input size=\"big\" icon='users' iconPosition='left' placeholder='Enter Username...' />\n            //    <Divider   hidden />\n            //    <Input size=\"big\" icon='users' iconPosition='left' placeholder='Enter Password...' />\n            //    <Divider />\n            //    <a href= {redirectableSignup }>\n            //   <Button \n            //   type=\"submit\"\n            //   fullWidth\n            //   variant=\"contained\"\n            //   color=\"primary\"\n            //   className={classes.submit}\n              \n            // >\n            //   Sign up\n            // </Button>\n            // </a>\n            //   </div>}\n            */}\n             \n             \n        </div>\n      </Grid>\n    </Grid>\n  );\n}","import { Header, Segment, Grid, Icon, Search } from 'semantic-ui-react';\nimport React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport _ from 'lodash'\nimport axios from 'axios'\nimport { InfoContext } from '../App'\nimport { Sidebar } from 'semantic-ui-react'\nimport { Button, Dropdown, Menu } from 'semantic-ui-react'\n\n\n\n\nconst PageHeaderDating = () => {\n  const {users, user,  accesstoken, activeItem, setActiveItem, refreshtoken, setNoMatchModal, setNoMessagesModal } = React.useContext(InfoContext);\n  const [value, setValue] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n  const [result, setResult] = useState(\"\");\n  const [redirectLogout, setRedirectLogout] = useState(false);\n  const [redirectSettings, setRedirectSettings] = useState(false);\n  const [logout, setLogout] = useState(false);\n  const [home, setRedirectHome] = useState(false);\n  function switchActive(){\n    if(activeItem=='messages'){\n      setNoMessagesModal(true);\n    }\n    if(activeItem=='matches'){\n      setNoMatchModal(true);\n    }\n    setActiveItem('home');\n    console.log(user && users&& users[user.id]['chats'])\n    return(<Redirect to={`/dating/home/${user.id}/${accesstoken}/${refreshtoken}`} push={true} />)\n  }\n\n  return (\n    <div style={{marginBottom:\"-10px\"}} >\n      \n      <Grid centered >\n        <Grid.Row>\n          \n          <Grid.Column width='16'>\n            <Menu inverted color={'purple'} size='large' widths={4} >\n              <Menu.Item\n                name='HeartBeat'\n                \n              />\n              <Menu.Item\n                name='home'\n                active={activeItem === 'home'}\n                onClick={() => setActiveItem('home')}\n              />\n              <Menu.Item\n                name='messages'\n                active={activeItem === 'messages'}\n                onClick={() => {\n                  setActiveItem('messages')\n                }}\n              />\n              <Menu.Item\n                name='Matches'\n                active={activeItem === 'matches'}\n                onClick={() => setActiveItem('matches')}\n              />\n\n            </Menu>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n\n\n\n      { redirectLogout ? <Redirect to={`/`} push={true} /> : \"\" }\n  { redirectSettings ? <Redirect to={`/settings`} push={true} /> : \"\" }\n  { activeItem === 'home' && user && accesstoken && refreshtoken? <Redirect to={`/dating/home/${user.id}/${accesstoken}/${refreshtoken}`} push={true} /> : \"\" }\n  { activeItem === 'messages' &&  user && users&& users[user.id]['chats']? <Redirect to={`/dating/messages`} push={true} /> : \n   activeItem === 'messages' ? switchActive() : \"\" }\n   { activeItem === 'matches' &&  user &&users && users[user.id]['matches']? <Redirect to={`/dating/matches`} push={true} /> : \n   activeItem === 'matches' ? \n   switchActive()\n    : \"\" }\n\n    </div >\n\n  );\n};\n\nexport default PageHeaderDating;","import React, { Component } from 'react'\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\nimport { InfoContext } from '../../App';\nconst NoMatchModal = ()=> {\nconst { nomatchmodal,setNoMatchModal } = React.useContext(InfoContext);\n\n \n    return (\n      <Modal\n        // trigger={<Button onClick={this.handleOpen}>Show Modal</Button>}\n        open={nomatchmodal}\n        onClose={()=>setNoMatchModal(false)}\n        basic\n        size='small'\n      >\n        <Header icon='browser' content='No messages.' />\n        <Modal.Content>\n          <h3>You don't have any matches yet.</h3>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='green' onClick={()=>setNoMatchModal(false)} inverted>\n            <Icon name='checkmark' /> Got it\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  \n}\n\nexport default NoMatchModal;","import React, { Component } from 'react'\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\nimport { InfoContext } from '../../App';\nconst NoMessagesModal = ()=> {\nconst { nomessagemodal,setNoMessagesModal } = React.useContext(InfoContext);\n\n    return (\n      <Modal\n        // trigger={<Button onClick={this.handleOpen}>Show Modal</Button>}\n        open={nomessagemodal}\n        onClose={()=>setNoMessagesModal(false)}\n        basic\n        size='small'\n      >\n        <Header icon='browser' content='No messages.' />\n        <Modal.Content>\n          <h3>You don't have any messages yet.</h3>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='green' onClick={()=>setNoMessagesModal(false)} inverted>\n            <Icon name='checkmark' /> Got it\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  \n}\n\nexport default NoMessagesModal;","import { Redirect } from 'react-router-dom'\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Container, Label, Header, Divider, Grid, Loader, Button, Image } from 'semantic-ui-react'\nimport { Router, useParams, Link } from 'react-router-dom';\nimport { Icon, Menu, Segment, Sidebar } from 'semantic-ui-react'\nimport { InfoContext } from '../../App'\n\nconst ReturnMessage = React.memo(({ otherpersonid, chatid, lastMine, lastTheirs, messageid }) => {\n        const { user, messages, chats, allusers } = React.useContext(InfoContext);\n        let item = messages[messageid];\n        let length = item.content.length;\n        let theirid = otherpersonid;\n        // console.log(otherpersonid);\n        // console.log(lastMine);\n        // console.log(lastTheirs);\n        if(allusers && theirid){\n                // console.log(allusers.find(item => item.id == theirid).datingimages[0])\n                // console.log(allusers.find(item => item.id == theirid))\n                // console.log(user.datingimages[0])\n        }\n        \n\n        // console.log(item.senderid == user.id)\n\n        if (user!=null && messages!=null && chats!=null && allusers!=null)\n                return (\n                        <Grid.Column width={5} floated={item.senderid == user.id ? 'right' : 'left'}>\n                                 {/* {messageid == lastMine ? <Image floated='right' size='mini' avatar src={user.datingimages[0]} /> : \"\"}\n                                {messageid == lastTheirs && theirid!=\"\"? <Image floated='mini'  size='small' avatar src={allusers.find(item => item.id == theirid).datingimages[0]} /> : \"\"}\n                                 */}\n                                 <Segment\n                                 \n                                        style={{\n                                                \"border-radius\": \"25px\",\n                                                \"max-width\": \"300px\",\n                                                \"word-wrap\": \"break-word\",\n                                        }}\n                                        inverted\n                                        rounded basic color={item.senderid == user.id ? 'red' : 'blue'} >\n                                      {/*float: `${item.senderid == user.id ? 'right' : 'left'}`  */}\n                                        <Header as='h5' style={{ \"marginTop\":\"-10px\"}} >{item.content}</Header>\n                                </Segment>\n                        </Grid.Column>\n\n\n\n\n\n\n                )\n                else{\n                        console.log(user);\n                        console.log(messages);\n                        console.log(chats);\n                        console.log(allusers);\n                        console.log(user && messages & chats & allusers)\n                        return('loading');\n                }\n\n});\nexport default ReturnMessage;\n\n{/* <div style={{background: \"#4CAF50\",\n  color: \"white\",\n  padding: \"15px\",\n  width: \"50%\",\n  height: \"50px\",\n  overflow: \"scroll\",\n  \"overflow-wrap\": \"break-word\",\n  border: \"1px solid #ccc\"\n  }}>{item.content}</div> */}","import { Redirect } from 'react-router-dom'\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Container, Header, Divider, Grid, Loader, Button, Image } from 'semantic-ui-react'\nimport { Router, useParams, Link } from 'react-router-dom';\nimport { Icon, Menu, Segment, Sidebar } from 'semantic-ui-react'\nimport { InfoContext } from '../../App'\nimport ReturnMessage from './ReturnMessage'\n\nconst ReturnChats = ({ otherpersonid,chatid }) => {\n        const { chats,messages,allusers ,user} = React.useContext(InfoContext);\n        let rel_messages = Object.values(chats[chatid]['chats']);\n        const[lastMine, setLastMine]=useState(\"\");\n        const[lastTheirs, setLastTheirs]=useState(\"\");\n        let person1=false; \n        let person2=false; \n        const theyArePerson1=chats[chatid]['person2']==user.id ? true : false;\n        useEffect(()=>{\n                for(let i=rel_messages.length-1; i>=0;i--)\n                {\n                        if(messages[rel_messages[i]]['senderid']==chats[chatid]['person1']  && !person1){\n                                if(chats[chatid]['person1']==user.id){\n                                        setLastMine(rel_messages[i]);\n                                        \n                                }\n                                else{\n                                        setLastTheirs(rel_messages[i]);\n                                }\n                                person1=true;\n                        }\n                        if(messages[rel_messages[i]]['senderid']==chats[chatid]['person2'] && !person2){\n                                if(chats[chatid]['person2']==user.id){\n                                        setLastMine(rel_messages[i]);\n                                }\n                                else{\n                                        setLastTheirs(rel_messages[i]);\n                                }\n                                person2=true;\n                        }\n                }\n        },[rel_messages, chats, messages] )\n        \n\n\n        return (\n                <Container>\n                        <Grid >\n                                        \n                                                        {rel_messages.map(index =>\n                                                                <Grid.Row style={{marginTop:\"1px\", \"padding\":\"1px\"}}>\n                                                                        <ReturnMessage key={index} lastMine={lastMine} chatid={chatid} otherpersonid={otherpersonid} lastTheirs={lastTheirs} messageid={index} >\n                                                                        </ReturnMessage>\n                                                                </Grid.Row>\n                                                                \n                                                                )}\n                                        \n                        </Grid>\n                </Container>\n        )\n}\nexport default ReturnChats;","import { Redirect } from 'react-router-dom'\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Container, Label, Header, Divider, Grid, Loader, Button, Image } from 'semantic-ui-react'\nimport { Router, useParams, Link } from 'react-router-dom';\nimport { Icon, Menu, Segment, Sidebar } from 'semantic-ui-react'\nimport { InfoContext } from '../../App'\n\nconst ReturnStartChat = ({chatid})=>\n{\n        const { allusers,user,chats } = React.useContext(InfoContext);\n\n        const [relevant, setRelevant]=useState(\"\");\n        useEffect(()=>\n        {\n                if(chats[chatid]['person1']==user.id){\n                        setRelevant(allusers.find( doc=>doc.id==chats[chatid]['person2']))\n                }\n                else{\n                        setRelevant(allusers.find( doc=>doc.id==chats[chatid]['person1']))\n                }\n                \n        }, [allusers,chats,chatid]);\n        useEffect(()=>{\n                console.log(relevant);\n        },[relevant]);\n        return(\n                <Segment>\n                        Start your first message with {relevant['fname']}\n                </Segment>\n \n        )\n}\nexport default ReturnStartChat;","\nimport React, {useState, useEffect, isValidElement, useContext, useRef} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport axios from 'axios'\nimport {Divider, Grid, Image, Header, Container, Form, TextArea, Button, Rail, Segment, Feed, FeedContent, Icon, Label, Loader} from 'semantic-ui-react'\nimport {Router , useParams} from  'react-router-dom';\nimport {dbUsers, dbChats, dbMessages} from '../../firebase/firebase'\nimport {InfoContext} from '../../App'\nimport DateToTime from '../../DateToTime'\n\nconst  WriteMessage =({chatid})=> {\n        const {chats,user} = React.useContext(InfoContext);\n        const [value,setValue]=useState(\"\");\n        const refKey = useRef();\n                function eventhandler(e) {\n                  // console.log(e);\n                if (e.key === 'Enter') {\n                 handleSubmitMessage();\n                 \n               }\n              //  console.log(\"Works outside\");\n            }\n\n        function handleSubmitMessage(){\n                // console.log(document.getElementById(\"textareareply\").value);\n                const messageref=dbMessages.push({\n                        'content':value,\n                        'senderid': user.id,\n                        'chatid':chatid,\n                        \"createdAt\": {'.sv': 'timestamp'}\n                      });\n                const messageKey=messageref.getKey();\n                // console.log(\"Likes key is \", likeskey);\n               \n                dbChats.child(chatid).child('chats').push(messageKey);\n                setValue(\"\")\n                }\n                 \n\n       \n            \n              \n        \n      \n        return(\n                    \n        <div fluid>\n                <TextArea fluid onKeyUp={(e) => eventhandler(e)} ref={refKey} id=\"textareareply\" value={value} onChange={(e)=>{\n                  setValue(e.target.value);\n                  // console.log(e.target.value);\n                }} rows={2} placeholder='Write a message...' /> \n                {/* <Form.Button fluid positive onClick = {()=>handleSubmitReply()} style={{marginTop:\"10px\"}}>Reply</Form.Button>  */}\n       </div>\n)}\n\nexport default WriteMessage;","import { Redirect } from 'react-router-dom'\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Container, Header, Divider, Grid, Loader, Button, Image, TextArea } from 'semantic-ui-react'\nimport { Router, useParams, Link } from 'react-router-dom';\nimport { Icon, Menu, Segment, Sidebar } from 'semantic-ui-react'\nimport { InfoContext } from '../App'\nimport ReturnChats from './ChatsComponents/ReturnChats'\nimport ReturnStartChat from  './ChatsComponents/ReturnStartChat'\nimport { dbChats, dbMessages } from '../firebase/firebase';\nimport WriteMessage from './ChatsComponents/WriteMessage';\nimport $ from 'jquery'\n\nconst ChatsHomepage = () => {\n        const { user, users, allusers, chats, messages } = React.useContext(InfoContext);\n        const [activeItem, setActiveItem] = useState(\"\");\n        const [relevantChats, setRelevantChats] = useState([]);\n        const[otherpersonid, setOtherId]= useState(\"\");\n\n        useEffect(() => {\n                if (user && users) {\n                        setRelevantChats(Object.values(users[user.id]['chats']));\n                }\n        }, [user, users])\n        useEffect(() => {\n                if (relevantChats.length > 0) {\n                        setActiveItem(relevantChats[0]);\n                }\n        }, [relevantChats])\n        useEffect(()=>{\n                if(chats[activeItem]){\n                        if(chats[activeItem]['person2'] == user.id ) {\n                                setOtherId(chats[activeItem]['person1'])\n                                console.log(chats[activeItem]['person1'])\n                        }\n                        else{\n                                setOtherId(chats[activeItem]['person2']);\n                                console.log(chats[activeItem]['person2']);\n                                } \n                        \n                }\n               \n        },[chats,activeItem])\n        \n        useEffect(()=>{\n                var element = document.getElementById(\"myDivID\");\n\n                if(element){\n                        console.log(\"NO ELEMENT\")\n                        window.scrollTo(0,element.offsetHeight);\n\n                }\n                // $('html, body').animate({\n                //         scrollTop: parseInt($(\"#myDivID\").offset().top\n                //     }, 2000);\n                    $('#myDivID').scrollTop($('#myDivID').scrollHeight);\n\n        },[])\n\n\n        if (user && users && chats && allusers&&activeItem)\n                return (\n                        <div>\n                                \n                                <Segment >\n                                        {/* style={{ overflow: 'auto', maxHeight: 200 }} */}\n                                        <Grid columns={2}>\n                                                <Grid.Column width={3}>\n                                                <Menu pointing vertical>\n                                                {relevantChats.map(chatid => {\n                                                        // console.log(allusers)\n                                                        var otherid = chats[chatid]['person2'] == user.id ? chats[chatid]['person1'] : chats[chatid]['person2'];\n                                                        // console.log(otherid);\n                                                        var obj = allusers.find(item => item.id == otherid)\n                                                        // console.log(obj);\n                                                        // console.log(obj);\n                                                        // console.log(otherid);\n\n                                                        return (\n                                                        <Menu.Item\n                                                                name={obj['fname']}\n                                                                active={activeItem === chatid}\n                                                                onClick={() => setActiveItem(chatid)}\n                                                        />)\n                                                })}\n\n                                        </Menu>\n\n                                                </Grid.Column>\n                                                <Grid.Column width={13}>\n                                                <Segment fluid>\n                                        {allusers && otherpersonid? <Image avatar size='small' src={allusers.find(item => item.id == otherpersonid).datingimages[0]} /> : \"\"}\n                                        {allusers && otherpersonid? <span style={{'marginLeft':\"10px\", fontSize:\"15\"}}>{allusers.find(item => item.id == otherpersonid).fname}</span> : \"\"}\n                                </Segment>\n                                                        <Segment  id=\"myDivID\" style={{minHeight:\"450px\",maxHeight:\"450px\", \"overflow-y\":\"auto\", \"scrollTop\":\"450px\"}} >\n                                                                {/* fluid */}\n                                                                {chats[activeItem]['chats'] ? \n                                                                                 <ReturnChats otherpersonid={otherpersonid} chatid={activeItem}/> \n                                                                                : \n                                                                                <ReturnStartChat chatid={activeItem} />}\n                                                                \n                                                        </Segment>\n                                                        <Segment fluid>\n                                                               <WriteMessage chatid={activeItem}/>\n                                                        </Segment>\n                                                        \n                                                       \n                                                </Grid.Column>\n                                        </Grid>\n                                        \n\n                                </Segment>\n                        </div>\n                )\n        else {\n                return <div>Not loaded</div>\n        }\n}\n\nexport default ChatsHomepage;","import axios from 'axios'\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport React, {useState, useContext, useEffect} from 'react';\nimport {Router, Redirect } from  'react-router-dom'\nimport logo from './logo.svg';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\nimport Homepage from './components/homepage';\nimport Login from './components/login'\nimport {Segment, Sidebar} from 'semantic-ui-react'\nimport SideBar from './components/Sidebar'\nimport MapLeaflet from './components/MapLeaflet'\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport Signup from './dating_components/signup';\nimport ArtistPage from './components/artisthomepage'\nimport TrackPage from './components/trackhomepage'\nimport PageHeader from './components/pageheader'\nimport {dbMessages, dbChats, dbPosts, dbSongs, dbUsers, dbArtists, dbReplies, dbLikes} from './firebase/firebase';\nimport SettingsPage from './components/settingspage';\nimport FavoriteArtists from './components/favartists'\nimport FavoriteSongs from './components/favsongs';\nimport DatingHomePageFeed from './dating_components/DatingHomepage';\nimport DatingLogin from './dating_components/DatingLogin'\nimport PageHeaderDating from './dating_components/pageheaderdating';\nimport NoMatchModal from './dating_components/EdgeCaseModals/NoMatchModal';\nimport NoMessagesModal from './dating_components/EdgeCaseModals/NoMessageModal';\nimport ChatsHomepage from './dating_components/ChatsHomepage';\n\nconst s = new Spotify();\n\nexport const InfoContext = React.createContext();\nfunction App() {\n  function withMenu(page){\n    return(\n      <div>\n        <PageHeader accesstoken={accesstoken} id={user.id}/>\n        <Sidebar.Pushable as={Segment}>\n        <SideBar />\n        <Sidebar.Pusher>\n          {page}\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n\n      </div>\n    )\n  }\n  function withMenuDating(page){\n    return(\n      <div>\n        <PageHeaderDating accesstoken={accesstoken} id={user.id}/>\n        <NoMatchModal />\n        <NoMessagesModal />\n        {/* <Sidebar.Pushable as={Segment}>\n        <SideBar />\n        <Sidebar.Pusher> */}\n          {page}\n        {/* </Sidebar.Pusher>\n      </Sidebar.Pushable> */}\n\n      </div>\n    )\n  }\n  \n  const [chats, setChats]=useState(\"\")\n  const [artists, setArtists]=useState(\"\")\n  const [messages, setMessages]=useState(\"\")\n  const [songs, setSongs]=useState(\"\")\n  const [posts, setPosts]=useState(\"\")\n  const [replies, setReplies]=useState(\"\")\n  const [likes, setLikes]=useState(\"\");\n  const [user, setUser]=useState(\"\")\n  const [accesstoken, setAccesToken]=useState(\"\")\n  const [refreshtoken, setRefreshToken]=useState(\"\")\n  const [visible, setVisible] = useState(false);\n  const [allusers, setAllusers] = useState(\"\");\n  const [attractedUsers,setAttracted]=useState(\"\");\n  const [orderedAttracted,setOrderedAttracted]=useState(\"\");\n  const [users, setUsers]=useState(\"\");\n  const [nomatchmodal, setNoMatchModal]=useState(false);\n  const [nomessagemodal, setNoMessagesModal]=useState(false);\n  const [activeItem, setActiveItem] = useState('home');\n\n  // useEffect(()=>console.log(nomatchmodal), [nomatchmodal]);\n  React.useEffect(()=>{\n    if(user){\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n   \n  }, [user]);\n  React.useEffect(()=>{\n    const data = localStorage.getItem('user');\n    if(data){\n      setUser(JSON.parse(data));\n    }\n    \n  }, []);\n  var redirectUri= process.env.NODE_ENV == 'production' ? `https://pure-harbor-26317.herokuapp.com/users/` : `http://localhost:8888/users/`\n  useEffect( handleData, [user]);\n  function handleData(){\n  axios.get(`${redirectUri}`)\n      .then(response => {\n       setAllusers(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    };\n// useEffect(attractedTo, [user, allusers]);\n//   function attractedTo(){\n//       if(allusers!=\"\" && user){\n//         // console.log(allusers);\n//         // console.log(user);\n//         setAttracted(allusers.filter(item => item.gender == user.type && item.id!=user.id));\n//       }\n//     };\n    useEffect(() => {\n      const handleData = snap => {\n        if (snap.val()) setUsers(snap.val());\n      }\n      dbUsers.on('value', handleData, error => alert(error));\n      return () => { dbUsers.off('value', handleData); };\n    }, []);\n  useEffect(() => {\n    const handleData = snap => {\n      if (snap.val()) setArtists(snap.val());\n    }\n    dbArtists.on('value', handleData, error => alert(error));\n    return () => { dbArtists.off('value', handleData); };\n  }, []);\n  useEffect(() => {\n    const handleData = snap => {\n      if (snap.val()) setLikes(snap.val());\n    }\n    dbLikes.on('value', handleData, error => alert(error));\n    return () => { dbLikes.off('value', handleData); };\n  }, []);\n  useEffect(() => {\n    const handleData = snap => {\n      if (snap.val()) setMessages(snap.val());\n    }\n    dbMessages.on('value', handleData, error => alert(error));\n    return () => { dbMessages.off('value', handleData); };\n  }, []);\n  useEffect(() => {\n    const handleData = snap => {\n      if (snap.val()) setChats(snap.val());\n    }\n    dbChats.on('value', handleData, error => alert(error));\n    return () => { dbChats.off('value', handleData); };\n  }, []);\n  useEffect(() => {\n    const handleData = snap => {\n      if (snap.val()) setReplies(snap.val());\n    }\n    dbReplies.on('value', handleData, error => alert(error));\n    return () => { dbReplies.off('value', handleData); };\n  }, []);\n  useEffect(() => {\n    const handleData = snap => \n    {\n      if (snap.val()) setSongs(snap.val());\n    }\n    dbSongs.on('value', handleData, error => alert(error));\n    return () => { dbSongs.off('value', handleData); };\n  }, []);\n  useEffect(() => {\n    const handleData = snap => {\n      if (snap.val()) setPosts(snap.val());\n    }\n    dbPosts.on('value', handleData, error => alert(error));\n    return () => { dbPosts.off('value', handleData); };\n  }, []);\n  useEffect(rankAttractedTo, [user, users,allusers]);\n        function rankAttractedTo(){\n          function comparedistance(a,b){\n            let lat1=user.location[0];\n            let lon1=user.location[1];\n            let score1=matchMusic(a,user);\n            let score2=matchMusic(b,user);\n            // let distance1=distance(lat1,lon1,a);\n            // let distance2=distance(lat1,lon1,b);\n\n            // distance2/\n            // distance1/\n            // find a way to use distance eventually once off campus etc.\n            return Math.min(score2,1)-Math.min(score1,1);\n          }\n          \n          function matchMusic(a,b){\n            let score=0;\n            let arr1=a['favoritesongs'];\n            let arr2=b['favoritesongs'];\n            let arr3=a['favoriteartists'];\n            let arr4=b['favoriteartists'];\n            let intersection1=arr1.filter(x=>arr2.includes(x));\n            let intersection2=arr3.filter(x=>arr4.includes(x));\n            return intersection1.length+intersection2.length;\n          }\n          // console.log(attractedUsers);\n          var copyUsers = allusers;\n          console.log(allusers);\n          if(allusers&&users&&user&&users[user.id]){\n            // console.log(allusers);\n            // console.log(user);\n\n            console.log(copyUsers.filter(partner=>((!Object.values(users[user.id]['seen']).includes(partner.id))) && ((partner.id!=user.id))));\n            var toset=copyUsers.filter(partner=>((!Object.values(users[user.id]['seen']).includes(partner.id))) && ((partner.id!=user.id))).sort(comparedistance);\n            console.log(toset);\n            setOrderedAttracted(toset);\n          }\n        }\n \n  return(\n    <BrowserRouter>\n      <InfoContext.Provider value={{activeItem, setActiveItem, nomatchmodal, setNoMatchModal,nomessagemodal, setNoMessagesModal, replies, users, allusers, attractedUsers,orderedAttracted, setReplies, artists, setArtists, messages, setMessages, songs, setSongs,posts, setPosts, likes, setLikes, user, setUser, chats,visible, setVisible, accesstoken, setAccesToken, refreshtoken, setRefreshToken}}>\n        {/* NEARIFY ROUTES */}\n        <Route exact path=\"/signup/:id/:access_token/:refresh_token\" render={()=> <Signup />} />\n        {/* <Route exact path=\"/\" render={()=><Login />} /> */}\n        <Route exact path=\"/\" render={()=><Redirect to='/dating' />} />\n\n        <Route exact path=\"/settings\" render={()=>withMenu(<SettingsPage />)} />\n        \n        <Route exact path=\"/home/:id/:access_token/:refresh_token\"  render = {()=> withMenu(<Homepage ></Homepage>)} />\n        {/* <Route exact path=\"/home/:id/:access_token/:refresh_token\"  render = {()=> withMenu(<div >Hello</div>)} /> */}\n\n        <Route exact path=\"/artist/:artistid\"  render = {()=> withMenu(<ArtistPage ></ArtistPage>)} />\n        <Route exact path=\"/track/:trackid\"  render = {()=> withMenu(<TrackPage ></TrackPage>)} />\n        <Route exact path=\"/tracks\"  render = {()=> withMenu(<FavoriteSongs />) } />\n        <Route exact path=\"/artists\"  render = {()=> withMenu(<FavoriteArtists />) } />\n\n        {/* <Route exact path=\"/artist/:artistid/:bool\"  render = {()=> <ArtistPage ></ArtistPage>} /> */}\n\n        <Route exact path=\"/map\" render={()=><MapLeaflet />} />\n\n\n\n        {/* DATING ROUTES */}\n        <Route exact path=\"/dating/home/:id/:access_token/:refresh_token\" render={()=>withMenuDating(<DatingHomePageFeed />)} />\n        <Route exact path=\"/dating\" render={()=><DatingLogin />} />\n        <Route exact path=\"/dating/messages\" render={()=>withMenuDating(<ChatsHomepage />)} />\n\n\n      </InfoContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n//test for push 2\n\n// function distance(lat1, lon1,user2) {\n//   let lat2 = user2.location[0];\n//   let lon2=user2.location[1];\n//   if ((lat1 == lat2) && (lon1 == lon2)) {\n//     return 0;\n//   }\n//   else {\n//     var radlat1 = Math.PI * lat1/180;\n//     var radlat2 = Math.PI * lat2/180;\n//     var theta = lon1-lon2;\n//     var radtheta = Math.PI * theta/180;\n//     var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n//     if (dist > 1) {\n//       dist = 1;\n//     }\n//     dist = Math.acos(dist);\n//     dist = dist * 180/Math.PI;\n//     dist = dist * 60 * 1.1515;\n//     return dist;\n//   }\n \n// }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}